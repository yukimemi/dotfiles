# =============================================================================
# File        : config.yml
# Author      : yukimemi
# Last Change : 2024/09/28 08:50:07.
# =============================================================================

snippets:
  # Git
  - name: git
    keyword: g
    snippet: git
  - name: git status
    keyword: s
    snippet: git st
  - name: git diff
    keyword: d
    snippet: git diff
  - name: git diff --cached
    keyword: dc
    snippet: git diff --cached
  - name: git graph
    keyword: gg
    snippet: git-graph
  - name: git add
    keyword: a
    snippet: git add
  - name: git commit
    keyword: gci
    snippet: git commit -v
  - name: git commit --no-edit --amend
    keyword: gcia
    snippet: git commit --no-edit --amend
  - name: git checkout
    keyword: gco
    snippet: git checkout
  - name: git push
    keyword: gpu
    snippet: git push
  - name: git pull
    keyword: gp
    snippet: git pull
  - name: git commit message
    keyword: gcim
    snippet: git commit -m '{{commit_message}}'
  - name: git foresta
    keyword: gl
    snippet: git foresta | bat
  - name: git log
    keyword: gl
    snippet: git l
  - name: git log --oneline
    keyword: glo
    snippet: git log --oneline
  - name: git log -p
    keyword: glp
    snippet: git log -p
  - name: git cd root
    keyword: gr
    snippet: "cd $(git rev-parse --show-toplevel)"
  - name: git stash
    keyword: gst
    snippet: git stash
  - name: git stash list
    keyword: gstl
    snippet: git stash list
  - name: git stash show {{stash}}
    keyword: gsts
    snippet: git stash show {{stash}}
  - name: git stash apply
    keyword: gsta
    snippet: git stash apply {{stash}}
  - name: git stash pop
    keyword: gstp
    snippet: git stash pop {{stash}}
  - name: git stash drop
    keyword: gstd
    snippet: git stash drop {{stash}}
  - name: git browse
    keyword: gbr
    snippet: git browse
  # Editor
  - name: Neovim
    keyword: e
    snippet: nvim
  - name: Vim
    keyword: v
    snippet: vim
  - name: Filter Neovim
    keyword: fe
    snippet: fd -H -E "**/.git/**" -E "**/node_modules/**" -t f | __filter_execute nvim
  - name: hitori
    keyword: h
    snippet: hitori
  # Shell
  - name: clear
    keyword: c
    snippet: clear
  - name: open
    keyword: o
    snippet: open
  - name: lsd
    keyword: ls
    snippet: lsd
  - name: ls -a
    keyword: la
    snippet: ls -al
  - name: ls -l
    keyword: l
    snippet: ls -l
  - name: trash
    keyword: r
    snippet: ls -a | __filter_execute trash
  - name: Back cd
    keyword: b
    snippet: cd ..
  - name: Exit
    keyword: t
    snippet: exit
  - name: bat
    keyword: cat
    snippet: bat
  - name: rsync
    keyword: rs
    snippet: rsync -av8 --progress
  # Filter
  - name: Zi
    keyword: j
    snippet: zi
  # rhq
  - name: rhq list jump
    keyword: rhl
    snippet: rhq list | __filter_execute cd
  # gsr
  - name: gsr list jump
    keyword: gsrl
    snippet: gsr | __filter_execute cd
  # tmux
  - name: tmux session list
    keyword: tl
    snippet: __tmux_session_list
  - name: tmuxinator list
    keyword: tm
    snippet: __tmux_tmuxinator_list
  - name: tmuxinator
    keyword: mux
    snippet: tmuxinator
  # zellij
  - name: zellij
    keyword: ze
    snippet: zellij
  # denops_std update
  - name: denops_std update
    keyword: dup
    snippet: "git add .; git commit -m ':up: Update denops_std.'; git push"
  # udd
  - name: deno udd
    keyword: udd
    snippet: deno run --allow-all https://deno.land/x/udd/main.ts
  - name: deno udd all
    keyword: uda
    snippet: deno run --allow-all https://deno.land/x/udd/main.ts **/*.ts
  # molt
  - name: Install molt
    keyword: install-molt
    snippet: deno install -f --allow-env --allow-read --allow-net --allow-write --allow-run=git --name=molt https://deno.land/x/molt/cli.ts
  - name: std to jsr
    keyword: stdtojsr
    snippet: deno run -A jsr:@omochice/replace-std-to-jsr
  # ogh
  - name: Install ogh
    snippet: deno install --allow-net --allow-run --allow-read --allow-env -f -g jsr:@lambdalisue/ogh
  # youtube-dl
  - name: Install yt-dlp (youtube-dl)
    keyword: install-yt-dlp
    snippet: pip install -U yt-dlp
  # yewtube
  - name: Install yewtube
    keyword: install-yewtube
    snippet: pip install pipx; pipx install --force git+https://github.com/iamtalhaasghar/yewtube.git
  - name: yt-dlp to music
    keyword: ytm
    snippet: yt-dlp -ix --no-post-overwrites --download-archive ./.downloaded
  - name: yt-dlp to mp3
    keyword: ytM
    snippet: yt-dlp -ix --no-post-overwrites --download-archive ./.downloaded --audio-format mp3-dl -i
  - name: yt-dlp download
    keyword: ytd
    snippet: yt-dlp -i --download-archive ./.downloaded
  # atuin
  - name: atuin register
    keyword: atuin register
    snippet: atuin register -u yukimemi -e yukimemi@gmail.com -p {{PASSWORD}}
  - name: atuin login
    keyword: atuin login
    snippet: atuin login -u yukimemi -p {{PASSWORD}} -k {{KEY}}
  - name: atuin get key
    keyword: atuin key
    snippet: atuin key
  # srss
  - name: srss open
    keyword: so
    snippet: srss open
  # vim-startuptime
  - name: vim-startuptime
    keyword: vim-startuptime
    snippet: go run github.com/rhysd/vim-startuptime@latest
  # Gravatar icon
  - name: Gravatar icon url
    keyword: gravatar
    snippet: https://www.gravatar.com/avatar/fdd2cd540411ae241ef29add747b62dd
  # Global abbr
  - name: Pipe grep
    keyword: G
    snippet: "| grep -i --color=auto {{grep_word}}"
    context:
      lbuffer: '.+\s'
  - name: Pipe less
    keyword: L
    snippet: "| bat"
    context:
      lbuffer: '.+\s'
  - name: "null"
    keyword: "null"
    snippet: ">/dev/null 2>&1"
    context:
      lbuffer: '.+\s'

  # Docker
  - name: Try NvChad
    keyword: nvchad
    snippet: docker run -w /root -it --rm alpine:edge sh -uelic 'apk add git nodejs neovim ripgrep alpine-sdk --update; git clone https://github.com/NvChad/NvChad ~/.config/nvim; nvim'
  - name: Docker dotfiles (mount)
    snippet: cd ~/.dotfiles; docker build --tag yukimemi/dotfiles --build-arg USERNAME=yukimemi .; docker run --rm -it -v $PWD:/home/yukimemi/.dotfiles:ro yukimemi/dotfiles
  - name: Docker dotfiles (no mount)
    snippet: cd ~/.dotfiles; docker build --tag yukimemi/dotfiles --build-arg USERNAME=yukimemi .; docker run --rm -it yukimemi/dotfiles

  # denops
  - name: Restart denops shared server
    snippet: launchctl stop io.github.vim-denops.LaunchAtLogin; launchctl start io.github.vim-denops.LaunchAtLogin

  # Install
  - name: Install deno-cache-injector
    snippet: deno install -r -f -n deno-cache-injector --allow-env --allow-read --allow-write https://raw.githubusercontent.com/kuuote/deno-cache-injector/main/injector.ts
  - name: Install deno-cache-injector (Windows)
    snippet: deno install -r -f -n deno-cache-injector --allow-env --allow-read --allow-write https://raw.githubusercontent.com/yukimemi/deno-cache-injector/main/injector.ts
  - name: Install denon
    snippet: deno install -qAf --unstable https://deno.land/x/denon/denon.ts
  - name: Install packup
    snippet: deno run -A https://deno.land/x/packup/install.ts
  - name: Install udd
    snippet: deno install -A -f -n udd https://deno.land/x/udd/main.ts
  - name: Install atuin
    snippet: cargo install atuin
  - name: Install sheldon
    snippet: cargo install sheldon
  - name: Install direnv
    snippet: curl -sfL https://direnv.net/install.sh | bash
  - name: Install nextword
    snippet: go install github.com/high-moctane/nextword@latest
  - name: Install zsh-bench
    snippet: git clone https://github.com/romkatv/zsh-bench ~/.zsh-bench
  - name: Install tmux plugin manager (tpm)
    snippet: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
  - name: Install rhq
    snippet: cargo install --git https://github.com/ubnt-intrepid/rhq.git
  - name: Install zola blog theme
    snippet: git clone https://github.com/pawroman/zola-theme-terminimal.git themes/terminimal
  - name: Install mmv
    snippet: go install github.com/itchyny/mmv/cmd/mmv@latest
  - name: Install memo
    snippet: go install github.com/mattn/memo@latest
  - name: Install yarn
    snippet: curl --compressed -o- -L https://yarnpkg.com/install.sh | bash
  - name: Install heroku cli
    snippet: brew tap heroku/brew && brew install heroku
  - name: Install gojq
    snippet: go install github.com/itchyny/gojq/cmd/gojq@latest
  - name: Install delta
    snippet: cargo install git-delta
  - name: Install Poetry
    snippet: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
  - name: Install vim-startuptime
    snippet: go install github.com/rhysd/vim-startuptime@latest
  - name: Install gsr
    snippet: go install github.com/yukimemi/gsr@latest
  - name: Install git-graph
    snippet: cargo install --git https://github.com/mlange-42/git-graph
  - name: Install jid
    snippet: go install github.com/simeji/jid/cmd/jid@latest
  - name: Install jvgrep
    snippet: go install github.com/mattn/jvgrep/v5@latest
  - name: Install task
    snippet: go install github.com/go-task/task/v3/cmd/task@latest
  - name: Install asdf
    snippet: brew install asdf
  - name: Install nekome
    snippet: brew install arrow2nd/tap/nekome
  - name: Install exercism
    snippet: brew install exercism
  - name: Install taplo
    snippet: cargo install --features lsp taplo-cli
  - name: Install yj
    snippet: brew install yj
  - name: Install jyt
    snippet: cargo install jyt
  - name: Install unrar
    snippet: brew install carlocab/personal/unrar
  - name: Install broot
    snippet: cargo install broot
  - name: Install rembg
    snippet: pip install rembg
  - name: Install dot
    snippet: cargo install --git https://github.com/ubnt-intrepid/dot.git
  - name: Install nublar
    snippet: deno install --allow-read --allow-write --allow-env --allow-net https://deno.land/x/nublar@0.2.0/nublar.ts
  - name: Install pkgx
    snippet: curl -L pkgx.sh | sh
  - name: Update pkgx
    snippet: curl -L pkgx.sh | sh
  - name: Install deno
    snippet: curl -fsSL https://deno.land/x/install/install.sh | sh
  - name: Install fk
    snippet: go install github.com/skanehira/fk/cmd/fk@latest
  - name: Install cargo-binstall
    snippet: cargo install cargo-binstall
  - name: Install cargo-udeps
    snippet: cargo install cargo-udeps
  - name: Install cargo-diet
    snippet: cargo install cargo-diet
  - name: Install slack cli
    snippet: curl -fsSL https://downloads.slack-edge.com/slack-cli/install.sh | bash
  - name: Install mutagen
    snippet: brew install mutagen-io/mutagen/mutagen
  - name: Install bob-nvim
    snippet: cargo install bob-nvim
  - name: Install gptcommit
    snippet: cargo install gptcommit
  - name: Install pnpm on Windows.
    snippet: iwr https://get.pnpm.io/install.ps1 -useb | iex
  - name: Install pnpm on POSIX.
    snippet: curl -fsSL https://get.pnpm.io/install.sh | sh -
  - name: Install xc
    snippet: go install github.com/joerdav/xc/cmd/xc@latest
  - name: Install hitori (neovide)
    snippet: deno install --force --allow-net --allow-run --allow-read --name hitori https://raw.githubusercontent.com/yukimemi/hitori.vim/main/cmd/hitori_neovide.ts
  - name: Install hitori
    snippet: deno install --force --allow-net --allow-run --allow-read --name hitori https://raw.githubusercontent.com/yukimemi/hitori.vim/main/cmd/hitori_nvim.ts
  - name: Install gifsicle
    snippet: brew install gifsicle
  - name: Install bsky
    snippet: go install github.com/mattn/bsky@latest
  - name: Install rtx
    snippet: cargo install cargo-binstall; cargo binstall rtx-cli
  - name: Install t-rec
    snippet: brew install t-rec
  - name: Install xplr
    snippet: brew install xplr
  - name: Install bleunlock
    snippet: brew install bleunlock
  - name: Install kingraph (family tree)
    snippet: pnpm install -g rstacruz/kingraph
  - name: Install runme
    snippet: go install github.com/stateful/runme@latest
  - name: Install btop
    snippet: brew install btop
  - name: Install bfg
    snippet: brew install bfg
  - name: Install zulip-term
    snippet: pip3 install zulip-term
  - name: Install orbstack
    snippet: brew install orbstack
  - name: Install aih
    snippet: rhq clone https://github.com/Databingo/aih; cd ~/src/github.com/Databingo/aih; go clean -cache && go clean -modcache; go mod tidy && go build && go install
  - name: Install ai-cli
    snippet: pip install git+https://github.com/yufeikang/ai-cli.git
  - name: Install yazi
    snippet: brew install yazi ffmpegthumbnailer unar jq poppler fd ripgrep fzf zoxide; brew tap homebrew/cask-fonts; brew install --cask font-symbols-only-nerd-font
  - name: Install zellij
    snippet: cargo install --locked zellij
  - name: Install rustup
    snippet: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  - name: Install gh-q
    snippet: gh extension install kawarimidoll/gh-q
  - name: Install gh-graph
    snippet: gh extension install kawarimidoll/gh-graph
  - name: Install countdown
    snippet: go install github.com/antonmedv/countdown@latest
  - name: Install ghg
    snippet: go install github.com/Songmu/ghg/cmd/ghg@latest
  - name: Install volta
    snippet: curl https://get.volta.sh | bash
  - name: Install ollama
    snippet: curl https://ollama.ai/install.sh | sh
  - name: Install csvlens
    snippet: cargo install csvlens
  - name: Install jnv
    snippet: cargo install jnv
  - name: Install cargo-machete
    snippet: cargo install cargo-machete
  - name: Install gibo
    snippet: go install github.com/simonwhitaker/gibo@latest

  # build
  - name: Build neovim (Ubuntu)
    snippet: sudo apt install -y ninja-build gettext cmake unzip curl; rm -rf /tmp/neovim; git clone https://github.com/neovim/neovim /tmp/neovim; cd /tmp/neovim; make CMAKE_BUILD_TYPE=RelWithDebInfo; sudo make install
  - name: Build neovim (Mac)
    snippet: brew install ninja cmake gettext curl; rm -rf /tmp/neovim; git clone https://github.com/neovim/neovim /tmp/neovim; cd /tmp/neovim; make CMAKE_BUILD_TYPE=RelWithDebInfo; sudo make install
  - name: Build helix (Mac)
    snippet: mkdir ~/.config/helix; rhq clone https://github.com/helix-editor/helix; cd ~/src/github.com/helix-editor/helix; git pull; cargo install --path helix-term --locked; ln -s $PWD/runtime ~/.config/helix/runtime

completions:
  - name: kill
    patterns:
      - "^kill( -9)? $"
    sourceCommand: "ps -ef | sed 1d"
    options:
      --multi: true
      --prompt: "'Kill Process> '"
    callback: "awk '{print $2}'"
