# =============================================================================
# File       : dein.toml
# Author     : yukimemi
# Last Change: 2021/11/22 09:17:51.
# =============================================================================

# ==================== Dein ======================

[[plugins]]
repo = "Shougo/dein.vim"

[[plugins]]
on_cmd = 'DeinUpdate'
repo = 'wsdjeg/dein-ui.vim'

# ==================== Visual ====================

[[plugins]]
repo = 'Yggdroot/indentLine'
if = "!has('nvim')"
hook_add = '''
source $VIM_PATH/rc/indentLine.vim
'''

[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'
on_source = 'nvim-treesitter'
if = "has('nvim') && g:plugin_use_indent_blankline"
hook_source = '''
source $VIM_PATH/rc/indent-blankline.nvim
'''

[[plugins]]
repo = 'yuki-yano/dps-indent-line'
if = "has('nvim') && g:plugin_use_dps_indent_line"

[[plugins]]
on_event = ['CursorHold', 'FocusLost']
repo = "andymass/vim-matchup"

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-cursorword.vim
'''
on_event = ['CursorHold', 'FocusLost']
repo = 'itchyny/vim-cursorword'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-external.vim
'''
on_map = '<Plug>'
repo = 'itchyny/vim-external'

[[plugins]]
on_event = ['CursorHold', 'FocusLost']
repo = "itchyny/vim-highlighturl"

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-parenmatch.vim
'''
on_event = ['CursorHold', 'FocusLost']
repo = 'itchyny/vim-parenmatch'

[[plugins]]
repo = 'mopp/smartnumber.vim'
on_event = ["CursorHold", "InsertEnter", "CursorMoved", "FocusLost"]

[[plugins]]
if = "g:plugin_use_fern"
repo = "lambdalisue/glyph-palette.vim"

[[plugins]]
if = "g:plugin_use_fern"
repo = "lambdalisue/nerdfont.vim"

[[plugins]]
if = "!has('gui') && !g:is_windows"
repo = 'lambdalisue/seethrough.vim'

[[plugins]]
if = "has('gui')"
repo = 'thinca/vim-fontzoom'

[[plugins]]
repo = 'thinca/vim-ft-diff_fold'

[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
source $VIM_PATH/rc/rainbow.vim
'''
if = "!has('nvim')"
on_event = ["CursorHold", "CursorMoved"]

# [[plugins]]
# hook_add = '''
# source $VIM_PATH/rc/vim-highlightedyank.vim
# '''
# repo = 'machakann/vim-highlightedyank'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/transparency-windows-vim.vim
'''
if = "g:is_windows && has('gui')"
# if = "g:is_windows"
repo = 'mattn/transparency-windows-vim'

[[plugins]]
if = "g:is_windows"
repo = 'mattn/vimtweak'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-better-whitespace.vim
'''
on_event = ['CursorHold', 'FocusLost', 'StripWhiteSpace']
repo = "ntpeters/vim-better-whitespace"

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-quickhl.vim
'''
on_event = ['CursorHold', 'FocusLost']
repo = 't9md/vim-quickhl'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/nvim-visual-eof.lua.vim
'''
if = "has('nvim')"
repo = 'LumaKernel/nvim-visual-eof.lua'

[[plugins]]
repo = 'mg979/vim-xtabline'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-plugin-AnsiEsc.vim
'''
repo = 'powerman/vim-plugin-AnsiEsc'

# [[plugins]]
# repo = 'DanilaMihailov/beacon.nvim'
# if = 'has("nvim")'
# on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'psliwka/vim-smoothie'
if = "!exists('g:nvui')"
on_event = ['CursorHold', 'FocusLost']
hook_add = '''
source $VIM_PATH/rc/vim-smoothie.vim
'''


# colorscheme

[[plugins]]
repo = "NLKNguyen/papercolor-theme"

[[plugins]]
repo = 'bluz71/vim-nightfly-guicolors'

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'drewtempelmeyer/palenight.vim'

[[plugins]]
repo = 'folke/tokyonight.nvim'

[[plugins]]
repo = 'gkeep/iceberg-dark'

[[plugins]]
repo = 'joshdick/onedark.vim'

[[plugins]]
repo = 'kjssad/quantum.vim'

[[plugins]]
repo = 'rhysd/vim-color-spring-night'

[[plugins]]
repo = 'romgrk/github-light.vim'

[[plugins]]
repo = 'sainnhe/gruvbox-material'
hook_add = '''
source $VIM_PATH/rc/gruvbox-material.vim
'''

[[plugins]]
repo = 'doums/darcula'

[[plugins]]
repo = 'severij/vadelma'

[[plugins]]
repo = 'yuttie/hydrangea-vim'

[[plugins]]
repo = 'glepnir/zephyr-nvim'

[[plugins]]
repo = 'adrian5/oceanic-next-vim'

[[plugins]]
repo = 'sainnhe/edge'

[[plugins]]
repo = 'tiagovla/tokyodark.nvim'
hook_add = '''
source $VIM_PATH/rc/tokyodark.nvim
'''

[[plugins]]
repo = 'ChristianChiarulli/nvcode-color-schemes.vim'

[[plugins]]
repo = 'rafamadriz/neon'

[[plugins]]
repo = 'Matsuuu/pinkmare'

[[plugins]]
repo = 'RRethy/nvim-base16'

[[plugins]]
repo = 'marko-cerovac/material.nvim'

[[plugins]]
repo = 'fenetikm/falcon'

[[plugins]]
repo = 'PHSix/nvim-hybrid'

# ==================== Treesitter ================
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
if = 'has("nvim")'
hook_post_update = 'TSUpdate'
hook_source = '''
source $VIM_PATH/rc/nvim-treesitter.vim
'''
on_event = 'BufRead'

[[plugins]]
repo = 'p00f/nvim-ts-rainbow'
if = 'has("nvim")'
on_source = 'nvim-treesitter'

# ==================== Utility ===================

[[plugins]]
on_cmd = ['Linediff', 'LinediffReset', 'LinediffShow', 'LinediffAdd']
repo = 'AndrewRadev/linediff.vim'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/yankround.vim
'''
repo = 'LeafCage/yankround.vim'

[[plugins]]
lazy = 1
repo = 'Shougo/context_filetype.vim'

[[plugins]]
hook_source = '''
source $VIM_PATH/rc/echodoc.vim
'''
on_event = 'CompleteDone'
repo = 'Shougo/echodoc.vim'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-rooter.vim
'''
on_event = ['CursorHold', 'FocusLost']
repo = 'airblade/vim-rooter'

[[plugins]]
if = 'has("nvim")'
on_event = ['CursorHold', 'FocusLost']
repo = 'ahmedkhalf/lsp-rooter.nvim'

[[plugins]]
repo = 'aiya000/aho-bakaup.vim'
hook_add = '''
source $VIM_PATH/rc/aho-bakaup.vim
'''
on_cmd = [
  'BakaupBackupExecute',
  'BakaupEnable',
  'BakaupDisable',
  'BakaupArchiveBackups',
  'BakaupSetBackupDir',
  'BakaupExplore',
  'BakaupTexplore',
  'BakaupVexplore',
  'BakaupSexplore',
]
on_event = 'BufWritePre'

[[plugins]]
repo = 'da-x/name-assign.vim'
hook_add = '''
source $VIM_PATH/rc/name-assign.vim
'''
on_map = { v = '<Plug>NameAssign' }

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = "gelguy/wilder.nvim"
hook_source = '''
source $VIM_PATH/rc/wilder.nvim
'''
on_map = ':'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-edgemotion.vim
'''
on_map = '<Plug>'
repo = 'haya14busa/vim-edgemotion'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-easy-align.vim
'''
on_map = { v = '<Plug>(EasyAlign)' }
repo = 'junegunn/vim-easy-align'

[[plugins]]
on_event = ['CursorHold', 'FocusLost']
repo = "lambdalisue/readablefold.vim"

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-findent.vim
'''
on_cmd = ['Findent']
repo = 'lambdalisue/vim-findent'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-sonictemplate.vim
'''
on_cmd = ['Template']
repo = 'mattn/vim-sonictemplate'

[[plugins]]
lazy = 1
repo = 'mattn/webapi-vim'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/undotree.vim
'''
on_cmd = ['UndotreeToggle']
repo = 'mbbill/undotree'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-camelsnek.vim
'''
on_cmd = ['Snek', 'Camel', 'CamelB', 'Kebab']
repo = 'nicwest/vim-camelsnek'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-renamer.vim
'''
on_cmd = ['Renamer']
repo = 'qpkorr/vim-renamer'

[[plugins]]
repo = 'rbtnn/vim-gloaded'

[[plugins]]
on_cmd = ['VimscriptLastError']
repo = 'rbtnn/vim-vimscript_lasterror'

[[plugins]]
repo = 'rbtnn/vim-vimscript_indentexpr'

# [[plugins]]
# repo = 'romainl/vim-qf'
# on_ft = ['quickfix', 'qf']

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
if = '!has("nvim")'
repo = 'roxma/vim-hug-neovim-rpc'

# [[plugins]]
# repo = 'roxma/vim-tmux-clipboard'
# if = '!g:is_windows'
# on_event = ['TextYankPost']

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-print-debug.vim
'''
on_event = ['CursorMoved']
repo = 'sentriz/vim-print-debug'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-ambicmd.vim
'''
repo = 'thinca/vim-ambicmd'

[[plugins]]
repo = 'thinca/vim-localrc'

[[plugins]]
on_cmd = ['PP']
repo = 'thinca/vim-prettyprint'

[[plugins]]
on_ft = ['quickfix', 'qf']
repo = 'thinca/vim-qfreplace'

[[plugins]]
repo = 'thinca/vim-submode'
hook_add = '''
source $VIM_PATH/rc/vim-submode.vim
'''
on_event = 'BufRead'

[[plugins]]
if = '!g:is_windows'
repo = 'tmux-plugins/vim-tmux-focus-events'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
on_cmd = ['Capture']
repo = 'tyru/capture.vim'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/open-browser.vim
'''
repo = 'tyru/open-browser.vim'

[[plugins]]
on_cmd = ['Restart']
repo = 'tyru/restart.vim'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/autodate.vim
'''
on_event = ['InsertEnter']
repo = 'vim-scripts/autodate.vim'

[[plugins]]
hook_source = '''
source $VIM_PATH/rc/vim-singleton.vim
'''
if = "!has('nvim') && has('clientserver')"
repo = 'thinca/vim-singleton'

[[plugins]]
repo = 'lilydjwg/colorizer'
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'machakann/vim-swap'

[[plugins]]
repo = 'syngan/vim-clurin'
hook_add = '''
source $VIM_PATH/rc/vim-clurin.vim
'''

[[plugins]]
on_event = ['CursorHold', 'FocusLost']
repo = 'Bakudankun/BackAndForward.vim'

[[plugins]]
repo = 'lambdalisue/edita.vim'
lazy = 1

[[plugins]]
repo = 'MattesGroeger/vim-bookmarks'

[[plugins]]
repo = 'osyo-manga/vim-hopping'
hook_add = '''
source $VIM_PATH/rc/vim-hopping.vim
'''
on_cmd = ['HoppingStart']

[[plugins]]
repo = 'itchyny/vim-winfix'

[[plugins]]
repo = 'lambdalisue/fin.vim'
hook_add = '''
source $VIM_PATH/rc/fin.vim
'''
on_cmd = ['Fin']

[[plugins]]
repo = 'chimay/wheel'

[[plugins]]
repo = 'habamax/vim-winlayout'
on_cmd = ['WinlayoutInspectLayout', 'WinlayoutInspectRestcmd']

[[plugins]]
repo = 'rbtnn/vim-layout'
on_cmd = ['LayoutSave', 'LayoutLoad']
hook_add = '''
source $VIM_PATH/rc/vim-layout.vim
'''

[[plugins]]
repo = 'xolox/vim-session'
depends = 'vim-misc'
on_cmd = [
  'SaveSession',
  'OpenSession',
  'RestartVim',
  'CloseSession',
  'DeleteSession',
  'ViewSession',
  'OpenTabSession',
  'SaveTabSession',
  'AppendTabSession',
  'CloseTabSession',
]

[[plugins]]
lazy = 1
repo = 'xolox/vim-misc'

[[plugins]]
repo = 'osyo-manga/vim-reanimate'
hook_add = '''
source $VIM_PATH/rc/vim-reanimate.vim
'''
on_cmd = ['ReanimateSave', 'ReanimateLoad', 'ReanimateLoadLatest']

[[plugins]]
repo = 't9md/vim-choosewin'
hook_add = '''
source $VIM_PATH/rc/vim-choosewin.vim
'''
on_event = 'BufRead'

# [[plugins]]
# repo = 'folke/todo-comments.nvim'
# depends = ['plenary.nvim']
# if = "has('nvim')"
# hook_add = '''
# source $VIM_PATH/rc/todo-comments.nvim
# '''

[[plugins]]
if = "has('nvim')"
lazy = 1
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'kevinhwang91/nvim-bqf'
depends = ['fzf']
if = "has('nvim')"

[[plugins]]
repo = 'junegunn/fzf'
hook_post_update = '''
call dein#source('fzf')
call fzf#install()
'''
lazy = 1

[[plugins]]
repo = 'deris/vim-pasta'
hook_add = '''
source $VIM_PATH/vim-pasta.vim
'''

[[plugins]]
repo = 'nanotee/zoxide.vim'
depends = ['fzf']
hook_add = '''
source $VIM_PATH/rc/zoxide.vim
'''

[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''
source $VIM_PATH/rc/ale.vim
'''
if = 'g:plugin_use_ale'
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'cohama/lexima.vim'
if = "g:plugin_use_lexima"
hook_add = '''
" source $VIM_PATH/rc/lexima.vim
'''

[[plugins]]
if = "g:plugin_use_lexiv"
repo = 'mattn/vim-lexiv'

[[plugins]]
repo = 'monkoose/vim9-stargate'
if = "!has('nvim')"
hook_add = '''
source $VIM_PATH/rc/vim9-stargate.vim
'''

[[plugins]]
repo = 'rcarriga/nvim-notify'
on_lua = 'notify'

[[plugins]]
on_source = "vim-submode"
repo = 'tyru/nextfile.vim'

[[plugins]]
repo = 'liuchengxu/vista.vim'
on_event = ['CursorHold', 'FocusLost']
on_cmd = 'Vista'

[[plugins]]
repo = 'kwkarlwang/bufresize.nvim'
on_event = ['CursorHold', 'FocusLost']
if = "has('nvim')"

[[plugins]]
repo = 'tweekmonster/startuptime.vim'
on_cmd = 'StartupTime'


# ==================== Test ======================
[[plugins]]
repo = 'vim-test/vim-test'
depends = ['neoterm']
hook_add = '''
source $VIM_PATH/rc/vim-test.vim
'''
on_cmd = ['TestNearest', 'TestFile', 'TestSuite', 'TestLast', 'TestVisit']

# ==================== Comment ===================

[[plugins]]
on_cmd = ['JunkfileOpen']
repo = 'Shougo/junkfile.vim'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/memolist.vim
'''
on_cmd = ['MemoList', 'MemoNew', 'MemoGrep']
repo = 'glidenote/memolist.vim'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/caw.vim
'''
on_map = '<Plug>'
repo = 'tyru/caw.vim'

# ==================== App =======================

[[plugins]]
repo = 'twitvim/twitvim'
hook_add = '''
source $VIM_PATH/rc/twitvim.vim
'''
on_cmd = ['FriendsTwitter', 'UserTwitter', 'RepliesTwitter', 'DMTwitter']

# ==================== Git =======================

[[plugins]]
repo = 'itchyny/vim-gitbranch'
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'lambdalisue/gina.vim'
if = "g:plugin_use_gina"
hook_add = '''
source $VIM_PATH/rc/gina.vim
'''
hook_source = '''
source $VIM_PATH/rc/gina_source.vim
'''
on_cmd = ['Gina']

[[plugins]]
repo = 'rhysd/committia.vim'
if = "!g:is_windows"

[[plugins]]
repo = 'rhysd/conflict-marker.vim'
on_event = ['CursorHold', 'FocusLost']


# ==================== Textobjs ==================

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'gilligan/textobj-lastpaste'

depends = 'vim-textobj-user'
hook_add = '''
source $VIM_PATH/rc/textobj-lastpaste.vim
'''
on_map = { n = '<Plug>', x = '<Plug>', o = '<Plug>' }

[[plugins]]
repo = 'kana/vim-textobj-entire'

depends = 'vim-textobj-user'
hook_add = '''
source $VIM_PATH/rc/vim-textobj-entire.vim
'''
on_map = { n = '<Plug>', x = '<Plug>', o = '<Plug>' }

[[plugins]]
repo = 'kana/vim-textobj-fold'

depends = 'vim-textobj-user'
hook_add = '''
source $VIM_PATH/rc/vim-textobj-fold.vim
'''
on_map = { n = '<Plug>', x = '<Plug>', o = '<Plug>' }

[[plugins]]
repo = 'kana/vim-textobj-function'

depends = 'vim-textobj-user'
hook_add = '''
source $VIM_PATH/rc/vim-textobj-function.vim
'''
on_map = { n = '<Plug>', x = '<Plug>', o = '<Plug>' }

[[plugins]]
repo = 'kana/vim-textobj-indent'

depends = 'vim-textobj-user'
hook_add = '''
source $VIM_PATH/rc/vim-textobj-indent.vim
'''
on_map = { n = '<Plug>', x = '<Plug>', o = '<Plug>' }

[[plugins]]
repo = 'kana/vim-textobj-line'

depends = 'vim-textobj-user'
hook_add = '''
source $VIM_PATH/rc/vim-textobj-line.vim
'''
on_map = { n = '<Plug>', x = '<Plug>', o = '<Plug>' }

[[plugins]]
on_event = ['CursorHold', 'FocusLost']
repo = 'machakann/vim-textobj-delimited'

[[plugins]]
on_event = ['CursorHold', 'FocusLost']
repo = 'mattn/vim-textobj-url'

[[plugins]]
on_event = ['CursorHold', 'FocusLost']
repo = 'osyo-manga/vim-textobj-multiblock'

# ==================== Operators =================

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'

depends = 'vim-operator-user'
hook_add = '''
source $VIM_PATH/rc/vim-operator-replace.vim
'''
on_map = '<Plug>'

[[plugins]]
repo = 'osyo-manga/vim-operator-search'

depends = 'vim-operator-user'
hook_add = '''
source $VIM_PATH/rc/vim-operator-search.vim
'''
on_map = '<Plug>'

[[plugins]]
on_event = ['CursorHold', 'FocusLost']
repo = 'osyo-manga/vim-operator-stay-cursor'

[[plugins]]
on_event = ['CursorHold', 'FocusLost']
repo = 'machakann/vim-sandwich'

[[plugins]]
on_event = ['CursorHold', 'FocusLost']
repo = 'osyo-manga/vim-operator-highlighter'

[[plugins]]
on_event = ['CursorHold', 'FocusLost']
repo = 'thinca/vim-operator-sequence'

# ==================== Search ====================

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-asterisk.vim
'''
on_map = '<Plug>'
repo = 'haya14busa/vim-asterisk'

[[plugins]]
on_event = ["CmdlineEnter", "CmdwinEnter"]
repo = 'markonm/traces.vim'

[[plugins]]
repo = 'tsuyoshicho/vim-fg'

[[plugins]]
repo = 'inside/vim-search-pulse'
hook_add = '''
source $VIM_PATH/rc/vim-search-pulse.vim
'''

# ==================== Shell =====================

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/deol.nvim
'''
on_cmd = ['Deol', 'DeolCd', 'DeolEdit']
repo = 'Shougo/deol.nvim'

[[plugins]]
repo = 'voldikss/vim-floaterm'
lazy = 1

[[plugins]]
repo = 'kassio/neoterm'
on_cmd = ['Tnew']
hook_add = '''
source $VIM_PATH/rc/neoterm.vim
'''

[[plugins]]
repo = 'akinsho/toggleterm.nvim'
on_cmd = 'ToggleTerm'
hook_add = '''
source $VIM_PATH/rc/toggleterm.nvim
'''

# ==================== denops ====================

[[plugins]]
repo = 'vim-denops/denops.vim'
augroup = 'denops_plugin_internal'
hook_add = '''
source $VIM_PATH/rc/denops.vim
'''

[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['context_filetype.vim', 'denops.vim']
hook_source = '''
source $VIM_PATH/rc/ddc.vim
'''
if = "g:plugin_use_ddc"
on_event = 'BufRead'

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-zsh'
depends = 'ddc.vim'
if = "g:plugin_use_ddc"
on_ft = 'zsh'

[[plugins]]
repo = 'Shougo/ddc-nextword'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_length'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
on_source = 'ddc.vim'

[[plugins]]
repo = 'LumaKernel/ddc-file'
on_source = 'ddc.vim'

# [[plugins]]
# repo = 'Shougo/ddc-omni'
# on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = 'nvim-lspconfig'
[[plugins]]
repo = 'matsui54/ddc-nvim-lsp-doc'
on_source = 'nvim-lspconfig'
hook_source = '''
source $VIM_PATH/rc/ddc-nvim-lsp-doc.vim
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'
hook_source = '''
source $VIM_PATH/rc/nvim-lspconfig.vim
'''
if = "g:plugin_use_ddc && has('nvim') && !g:plugin_use_vimlsp"
on_ft = ['typescript', 'ps1', 'vim', 'rust', 'go']

[[plugins]]
repo = 'williamboman/nvim-lsp-installer'
depends = 'nvim-lspconfig'
on_cmd = [
  'LspInstall',
  'LspUninstall',
  'LspUninstallAll',
  'LspPrintInstalled',
  'LspInstallInfo',
]
if = "has('nvim')"

[[plugins]]
repo = 'shun/ddc-vim-lsp'
if = "g:plugin_use_ddc && (!has('nvim') || g:plugin_use_vimlsp)"
on_source = 'ddc.vim'

[[plugins]]
repo = 'delphinus/ddc-treesitter'
if = "g:plugin_use_ddc && has('nvim') && !g:plugin_use_vimlsp"
on_source = ['ddc.vim', 'nvim-treesitter']

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = ['vim', 'toml', 'help']
depends = 'ddc.vim'

# [[plugins]]
# repo = 'higashi000/dps-kakkonan'
# depends = 'denops.vim'

[[plugins]]
depends = 'denops.vim'
repo = 'yuki-yano/dps-zero.vim'

# [[plugins]]
# repo = 'monaqa/dps-dial.vim'
# depends = 'denops.vim'
# on_map = '<Plug>'
# hook_add = '''
# source $VIM_PATH/rc/dps-dial.vim
# '''

[[plugins]]
depends = 'denops.vim'
repo = 'tamago324/dps-gitignore'

[[plugins]]
depends = 'denops.vim'
if = "!g:is_windows"
repo = 'yutkat/dps-coding-now.nvim'

[[plugins]]
depends = 'denops.vim'
hook_add = '''
source $VIM_PATH/rc/command.vim
'''
if = "!g:is_windows"
repo = 'skanehira/command.vim'

[[plugins]]
repo = 'yukimemi/dps-ahdr'
# repo = '~/src/github.com/yukimemi/dps-ahdr'
depends = 'denops.vim'
hook_add = '''
source $VIM_PATH/rc/dps-ahdr.vim
'''

[[plugins]]
repo = 'yukimemi/dps-autocursor'
# repo = '~/src/github.com/yukimemi/dps-autocursor'
depends = 'denops.vim'
hook_add = '''
source $VIM_PATH/rc/dps-autocursor.vim
'''

[[plugins]]
repo = 'yukimemi/dps-asyngrep'
# repo = '~/src/github.com/yukimemi/dps-asyngrep'
depends = 'denops.vim'
hook_add = '''
source $VIM_PATH/rc/dps-asyngrep.vim
'''

[[plugins]]
repo = 'yukimemi/dps-walk'
# repo = '~/src/github.com/yukimemi/dps-walk'
depends = 'denops.vim'
hook_add = '''
source $VIM_PATH/rc/dps-walk.vim
'''

[[plugins]]
repo = 'kat0h/bufpreview.vim'
depends = 'denops.vim'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
on_cmd = ['PreviewMarkdown', 'PreviewMarkdownStop', 'PreviewMarkdownToggle']

[[plugins]]
repo = 'lambdalisue/askpass.vim'
if = "g:plugin_use_gin"
lazy = 1

[[plugins]]
repo = 'lambdalisue/gin.vim'
if = "g:plugin_use_gin"
depends = ['denops.vim', 'askpass.vim']
hook_add = '''
source $VIM_PATH/rc/gin.vim
'''

# ==================== Fuzzy =====================

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
source $VIM_PATH/rc/ctrlp.vim
'''
if = "g:plugin_use_ctrlp"
on_cmd = ['CtrlP', 'CtrlPBuffer', 'CtrlPCurFile', 'CtrlPMRUFiles']
[[plugins]]
repo = 'kaneshin/ctrlp-filetype'
depends = ['ctrlp.vim']
if = "g:plugin_use_ctrlp"
on_cmd = ['CtrlPFiletype']
[[plugins]]
repo = 'kaneshin/ctrlp-memolist'
depends = ['ctrlp.vim']
if = "g:plugin_use_ctrlp"
on_cmd = ['CtrlPMemolist']
[[plugins]]
repo = 'kaneshin/ctrlp-sonictemplate'
depends = ['ctrlp.vim']
if = "g:plugin_use_ctrlp"
on_cmd = ['CtrlPSonictemplate']
[[plugins]]
repo = 'mattn/ctrlp-launcher'
depends = ['ctrlp.vim']
if = "g:plugin_use_ctrlp"
on_cmd = ['CtrlPLauncher']
[[plugins]]
repo = 'mattn/ctrlp-mark'
depends = ['ctrlp.vim']
if = "g:plugin_use_ctrlp"
on_cmd = ['CtrlPMark']
[[plugins]]
repo = 'mattn/ctrlp-vimhelpjp'
depends = ['ctrlp.vim', 'webapi-vim']
if = "g:plugin_use_ctrlp"
on_cmd = ['VimHelpJp']
[[plugins]]
repo = 'ompugao/ctrlp-history'
depends = ['ctrlp.vim']
if = "g:plugin_use_ctrlp"
on_cmd = ['CtrlPCmdHistory', 'CtrlPSearchHistory']
[[plugins]]
depends = ['ctrlp.vim']
if = "g:plugin_use_ctrlp"
repo = 'suy/vim-ctrlp-commandline'
# on_cmd = ['CtrlPCommandLine']
[[plugins]]
depends = ['ctrlp.vim']
if = "g:plugin_use_ctrlp"
repo = 'FelikZ/ctrlp-py-matcher'
[[plugins]]
depends = ['ctrlp.vim']
hook_post_update = '''
call dein#source('fruzzy')
call fruzzy#install()
'''
if = "g:plugin_use_ctrlp"
repo = 'raghur/fruzzy'
[[plugins]]
depends = ['ctrlp.vim']
if = "g:plugin_use_ctrlp && exists('*matchfuzzy')"
repo = 'mattn/ctrlp-matchfuzzy'
[[plugins]]
repo = 'lambdalisue/mr.vim'
lazy = 1
[[plugins]]
repo = 'tsuyoshicho/ctrlp-mr.vim'
depends = ['ctrlp.vim', 'mr.vim']
on_cmd = ['CtrlPMRMru', 'CtrlPMRMrw', 'CtrlPMRMrr']
[[plugins]]
repo = 'kaneshin/ctrlp-git-log'
depends = ['ctrlp.vim']
on_cmd = 'CtrlPGitLog '

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-clap.vim
'''
hook_post_update = '''
call clap#helper#build_all()
'''
if = "g:plugin_use_clap"
on_cmd = ['Clap']
repo = 'liuchengxu/vim-clap'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['junkfile.vim']
hook_add = '''
source $VIM_PATH/rc/denite.nvim
'''
hook_source = '''
source $VIM_PATH/rc/denite_source.nvim
'''
if = "has('python3') && g:plugin_use_denite"
on_cmd = 'Denite'

[[plugins]]
if = 'g:plugin_use_quickpick'
lazy = 1
repo = 'prabirshrestha/quickpick.vim'

[[plugins]]
depends = 'quickpick.vim'
if = 'g:plugin_use_quickpick'
on_cmd = ['Pfiletypes']
repo = 'prabirshrestha/quickpick-filetypes.vim'

[[plugins]]
depends = 'quickpick.vim'
if = 'g:plugin_use_quickpick'
on_cmd = ['Pcolorschemes']
repo = 'prabirshrestha/quickpick-colorschemes.vim'

[[plugins]]
depends = 'quickpick.vim'
if = 'g:plugin_use_quickpick'
on_cmd = ['Pfiles']
repo = 'clozed2u/quickpick-files.vim'

[[plugins]]
depends = 'quickpick.vim'
if = 'g:plugin_use_quickpick'
on_cmd = ['Poldfiles']
repo = '0keke/quickpick-oldfiles.vim'

[[plugins]]
depends = 'quickpick.vim'
if = 'g:plugin_use_quickpick'
on_cmd = ['Pquicklauncher']
repo = '0keke/quickpick-launcher.vim'

# ==================== Statusline ================

[[plugins]]
depends = ['vim-lightline-coc']
hook_add = '''
source $VIM_PATH/rc/lightline.vim
'''
if = "g:plugin_use_lightline"
on_event = ['CursorHold', 'FocusLost']
repo = "itchyny/lightline.vim"

[[plugins]]
if = "g:plugin_use_lightline && v:false"
lazy = 1
repo = 'halkn/lightline-lsp'

[[plugins]]
if = "g:plugin_use_lightline"
lazy = 1
repo = 'josa42/vim-lightline-coc'

[[plugins]]
depends = ["vim-airline-themes"]
hook_add = '''
source $VIM_PATH/rc/vim-airline.vim
'''
if = "g:plugin_use_airline"
repo = "vim-airline/vim-airline"

[[plugins]]
if = "g:plugin_use_airline"
lazy = 1
repo = "vim-airline/vim-airline-themes"

[[plugins]]
repo = "doums/barow"
depends = 'vim-reanimate'
if = "g:plugin_use_barow"
hook_source = '''
source $VIM_PATH/rc/barow.vim
'''
on_event = 'BufRead'

[[plugins]]
repo = "doums/barowLSP"
on_source = 'barow'
[[plugins]]
repo = "doums/barowGit"
on_source = 'barow'


[[plugins]]
repo = 'tamton-aquib/staline.nvim'
hook_source = '''
source $VIM_PATH/rc/staline.nvim
'''
if = "g:plugin_use_staline && has('nvim')"
on_event = ['CursorHold', 'FocusLost']

# ==================== Filetree ==================

[[plugins]]
repo = 'lambdalisue/fern.vim'
if = "g:plugin_use_fern"
hook_add = '''
source $VIM_PATH/rc/fern.vim
'''
on_cmd = 'Fern'
[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'
on_source = 'fern.vim'
[[plugins]]
repo = 'lambdalisue/fern-git.vim'
on_source = 'fern.vim'
[[plugins]]
repo = 'lambdalisue/fern-mapping-git.vim'
on_source = 'fern.vim'
[[plugins]]
repo = 'lambdalisue/fern-bookmark.vim'
on_source = 'fern.vim'
[[plugins]]
repo = 'lambdalisue/fern-comparator-lexical.vim'
on_source = 'fern.vim'
[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
on_source = 'fern.vim'
depends = ['nerdfont.vim', 'glyph-palette.vim']
[[plugins]]
repo = 'lambdalisue/fern-hijack.vim'
on_source = 'fern.vim'

[[plugins]]
repo = 'Shougo/defx.nvim'
depends = 'vim-choosewin'
hook_add = '''
source $VIM_PATH/rc/defx.nvim
'''
if = "g:plugin_use_defx"
on_cmd = 'Defx'
[[plugins]]
repo = 'kristijanhusak/defx-icons'
on_source = 'defx.nvim'
[[plugins]]
repo = 'kristijanhusak/defx-git'
on_source = 'defx.nvim'

[[plugins]]
repo = 'mattn/vim-molder'
if = 'g:plugin_use_molder'
depends = ['vim-molder-operations']
hook_add = '''
source $VIM_PATH/rc/vim-molder.vim
'''

[[plugins]]
repo = 'mattn/vim-molder-operations'
on_source = 'vim-molder'

[[plugins]]
repo = 'cocopon/vaffle.vim'
if = 'g:plugin_use_vaffle'
on_cmd = 'Vaffle'

[[plugins]]
repo = 'ryym/vim-viler'
if = 'g:plugin_use_viler'
hook_add = '''
source $VIM_PATH/rc/vim-viler.vim
'''
on_func = 'viler#open'

# ==================== Complement ================

[[plugins]]
repo = 'honza/vim-snippets'
on_event = 'InsertEnter'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
hook_add = '''
source $VIM_PATH/rc/asyncomplete.vim
'''
if = 'g:plugin_use_asyncomplete'

[[plugins]]
build = 'go get -u github.com/high-moctane/nextword'
if = "g:plugin_use_asyncomplete && executable('go')"
repo = 'high-moctane/asyncomplete-nextword.vim'

[[plugins]]
hook_source = '''
source $VIM_PATH/rc/vim-vsnip.vim
'''
if = 'g:plugin_use_asyncomplete'
on_event = ['InsertEnter']
repo = 'hrsh7th/vim-vsnip'

[[plugins]]
depends = ['vim-vsnip']
if = 'g:plugin_use_asyncomplete'
repo = 'hrsh7th/vim-vsnip-integ'

[[plugins]]
if = "g:plugin_use_asyncomplete || (g:plugin_use_ddc && (!has('nvim') || g:plugin_use_vimlsp))"
repo = 'mattn/vim-lsp-icons'

[[plugins]]
if = "g:plugin_use_asyncomplete || (g:plugin_use_ddc && (!has('nvim') || g:plugin_use_vimlsp))"
repo = 'mattn/vim-lsp-settings'

[[plugins]]
if = 'g:plugin_use_asyncomplete'
repo = 'prabirshrestha/async.vim'

[[plugins]]
if = 'g:plugin_use_asyncomplete'
repo = 'prabirshrestha/asyncomplete-buffer.vim'

[[plugins]]
if = 'g:plugin_use_asyncomplete'
repo = 'prabirshrestha/asyncomplete-file.vim'

[[plugins]]
if = 'g:plugin_use_asyncomplete'
repo = 'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-lsp.vim
'''
if = "g:plugin_use_asyncomplete || (g:plugin_use_ddc && (!has('nvim') || g:plugin_use_vimlsp))"
repo = 'prabirshrestha/vim-lsp'

[[plugins]]
repo = "neoclide/coc.nvim"
if = "g:plugin_use_coc"
rev = "release"
hook_add = '''
source $VIM_PATH/rc/coc.nvim
'''

# ==================== Runner ====================

[[plugins]]
depends = ['vim-quickrun-neovim-job']
hook_add = '''
source $VIM_PATH/rc/vim-quickrun.vim
'''
if = "g:plugin_use_quickrun"
on_map = '<Plug>'
repo = 'thinca/vim-quickrun'

[[plugins]]
if = "g:plugin_use_quickrun"
lazy = 1
repo = 'lambdalisue/vim-quickrun-neovim-job'
if = "has('nvim')"

[[plugins]]
repo = 'statiolake/vim-quickrun-runner-nvimterm'
hook_add = '''
source $VIM_PATH/rc/vim-quickrun-runner-nvimterm.vim
'''
if = "has('nvim') && g:plugin_use_quickrun"
on_source = ['vim-quickrun']

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/asyncrun.vim
'''
if = "g:plugin_use_asyncrun"
repo = 'skywind3000/asyncrun.vim'

# ==================== Filetype (all) ============

[[plugins]]
repo = 'nathom/filetype.nvim'
if = "has('nvim')"
hook_add = '''
source $VIM_PATH/rc/filetype.nvim
'''

# [[plugins]]
# repo = 'sheerun/vim-polyglot'
# hook_add = '''
# source $VIM_PATH/rc/vim-polyglot.vim
# '''
# merged = 0

# ==================== Filetype (markdown) =======

[[plugins]]
on_ft = ['markdown']
repo = 'dhruvasagar/vim-table-mode'

# [[plugins]]
# repo = 'iamcco/markdown-preview.nvim'
# hook_add = '''
# source $VIM_PATH/rc/markdown-preview.nvim
# '''
# hook_post_update = '''
# call dein#source('markdown-preview.nvim')
# call mkdp#util#install()
# '''
# on_ft = ['markdown', 'pandoc.markdown', 'rmd']

[[plugins]]
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
repo = 'rhysd/vim-gfm-syntax'

# ==================== Filetype (html) ===========

[[plugins]]
on_ft = ['html']
repo = 'mattn/emmet-vim'

# ==================== Filetype (plantuml) =======

[[plugins]]
depends = ['open-browser.vim']
on_ft = 'plantuml'
repo = 'tsuyoshicho/plantuml-previewer.vim'

[[plugins]]
on_ft = 'plantuml'
repo = 'aklt/plantuml-syntax'

# ==================== Filetype (toml) =======

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'nastevens/vim-cargo-make'
on_ft = 'toml'

# ==================== Filetype (duckscript) =======

[[plugins]]
repo = 'nastevens/vim-duckscript'

# ==================== Filetype (zsh [zinit]) =======

[[plugins]]
on_ft = 'zsh'
repo = 'zinit-zsh/zinit-vim-syntax'

# ==================== Filetype (Haskell) ========

[[plugins]]
build = 'stack install ghc-mod'
hook_add = '''
source $VIM_PATH/rc/ghcmod-vim.vim
'''
if = "executable('stack')"
on_ft = 'haskell'
repo = 'eagletmt/ghcmod-vim'

[[plugins]]
on_ft = 'haskell'
repo = 'itchyny/vim-haskell-indent'

[[plugins]]
hook_add = '''
source $VIM_PATH/rc/vim-haskell-sort-import.vim
'''
on_ft = 'haskell'
repo = 'itchyny/vim-haskell-sort-import'

# ==================== Filetype (purescript) =====

[[plugins]]
on_ft = 'purescript'
repo = 'FrigoEU/psc-ide-vim'

# ==================== Filetype (powershell) =====

[[plugins]]
on_ft = ['powershell', 'ps1']
repo = 'PProvost/vim-ps1'

# ==================== Filetype (csv) ============

[[plugins]]
on_ft = 'csv'
repo = 'mechatroner/rainbow_csv'

# ==================== Filetype (log) ============
[[plugins]]
repo = 'MTDL9/vim-log-highlighting'
on_ft = 'log'

# ==================== Filetype (fish) ============

[[plugins]]
on_ft = 'fish'
repo = 'dag/vim-fish'

# ==================== After ftplugin ============

[ftplugin]
_ = '''
" Disable automatically insert comment.
setl formatoptions-=r
setl formatoptions-=o
setl formatoptions+=mMBl

set concealcursor=nc
'''

dosbatch = '''
setl fenc=cp932 ff=dos
'''

html = '''
let g:html_indent_inctags = "html,body,head,tbody"
let g:html_syntax_folding = 1
setl noexpandtab
setl ts=4 sw=4 sts=0
setl foldmethod=syntax
'''

csv = '''
setl nowrap
'''

log = '''
setl nowrap
'''

mail = '''
setl ff=dos
setl fenc=cp932
'''

markdown = '''
setl formatoptions+=t
setl conceallevel=0
'''

go = '''
setl completeopt+=preview
'''

ps1 = '''
setl expandtab
setl fenc=utf-8
setl ff=dos
setl foldmethod=syntax
setl ts=2 sw=2 sts=0
setl foldcolumn=3
'''

python = '''
setl cinwords=if,elif,else,for,while,try,except,finally,def,class
setl expandtab
setl ts=8 sw=4 sts=4
setl foldmethod=indent foldlevel=99
'''

xml = '''
setl noexpandtab
setl ts=4 sw=4 sts=0

let g:xml_syntax_folding = 1
setl foldmethod=syntax
'''

elm = '''
setl ts=4 sw=4 sts=0
'''

javascript = '''
'''

css = '''
'''

rust = '''
'''

text = '''
setl noexpandtab
setl ts=4 sw=4 sts=0
'''

json = '''
set concealcursor=nc
'''
