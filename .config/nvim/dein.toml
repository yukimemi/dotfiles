# =============================================================================
# File        : dein.toml
# Author      : yukimemi
# Last Change : 2020/03/06 13:10:50.
# =============================================================================

# ==================== Dein ====================== {{{1
[[plugins]]
repo = 'Shougo/dein.vim' # {{{2

[[plugins]]
repo = 'wsdjeg/dein-ui.vim' # {{{2

# ==================== Visual ==================== {{{1
[[plugins]]
repo = 'rhysd/vim-color-spring-night' # {{{2

[[plugins]]
repo =  'hiroakis/cyberspace.vim' # {{{2

[[plugins]]
repo = 'ryanoasis/vim-devicons' # {{{2

[[plugins]]
repo = 'itchyny/lightline.vim' # {{{2
hook_add = '''
source $VIM_PATH/rc/lightline.vim
'''
if = "g:dein_use_lightline"

[[plugins]]
repo = 'kmtoki/lightline-colorscheme-simplicity' # {{{2
if = "g:dein_use_lightline"

[[plugins]]
repo = 'vim-airline/vim-airline' # {{{2
hook_add = '''
source $VIM_PATH/rc/vim-airline.vim
'''
if = 'g:dein_use_airline'
[[plugins]]
repo = 'vim-airline/vim-airline-themes' # {{{2
if = 'g:dein_use_airline'

[[plugins]]
repo = 'Yggdroot/indentLine' # {{{2
hook_add = '''
source $VIM_PATH/rc/indentLine.vim
'''

[[plugins]]
repo = 'itchyny/vim-highlighturl' # {{{2
on_event = "CursorHold"

[[plugins]]
repo = 'andymass/vim-matchup' # {{{2
on_event = "CursorHold"

[[plugins]]
repo = 'ntpeters/vim-better-whitespace' # {{{2
on_event = "CursorHold"

[[plugins]]
repo = 'jeffkreeftmeijer/vim-numbertoggle' # {{{2
on_event = ["CursorHold", "WinEnter"]

[[plugins]]
repo = 'mattn/transparency-windows-vim' # {{{2
if = "g:is_windows"
hook_add = '''
source $VIM_PATH/rc/transparency-windows-vim.vim
'''

[[plugins]]
repo = 'mattn/vimtweak' # {{{2
if = "g:is_windows"

[[plugins]]
repo = 'rhysd/accelerated-jk' # {{{2
on_event = ['CursorMoved']
hook_add = '''
source $VIM_PATH/rc/accelerated-jk.vim
'''

[[plugins]]
repo = 'psliwka/vim-smoothie' # {{{2
on_event = ['CursorMoved']

# ==================== Complement ================ {{{1
[[plugins]]
repo = 'Shougo/context_filetype.vim' # {{{2
lazy = 1

[[plugins]]
repo = 'prabirshrestha/async.vim' # {{{2
if = 'g:dein_use_asyncomplete'
[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim' # {{{2
hook_add = '''
source $VIM_PATH/rc/asyncomplete.vim
'''
if = 'g:dein_use_asyncomplete'
[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim' # {{{2
if = 'g:dein_use_asyncomplete'
[[plugins]]
repo = 'prabirshrestha/vim-lsp' # {{{2
merged = 0
if = 'g:dein_use_asyncomplete'
[[plugins]]
repo = 'mattn/vim-lsp-settings' # {{{2
merged = 0
if = 'g:dein_use_asyncomplete'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-buffer.vim' # {{{2
if = 'g:dein_use_asyncomplete'
[[plugins]]
repo = 'prabirshrestha/asyncomplete-file.vim' # {{{2
if = 'g:dein_use_asyncomplete'
[[plugins]]
repo = 'prabirshrestha/asyncomplete-emoji.vim' # {{{2
if = 'g:dein_use_asyncomplete'
[[plugins]]
repo = 'prabirshrestha/asyncomplete-tags.vim' # {{{2
if = "executable('ctags') && g:dein_use_asyncomplete"

[[plugins]]
repo = "neoclide/coc.nvim" # {{{2
rev = "release"
if = "g:dein_use_coc"
hook_add = '''
source $VIM_PATH/rc/coc.nvim
'''

# [[plugins]]
# repo = 'cohama/lexima.vim' # {{{2
# on_event = ['InsertEnter']

[[plugins]]
repo = 'honza/vim-snippets' # {{{2
on_event = ['InsertEnter']

# ==================== Utility =================== {{{1
[[plugins]]
repo = 'airblade/vim-rooter' # {{{2
hook_add = '''
source $VIM_PATH/rc/vim-rooter.vim
'''

[[plugins]]
repo = 'thinca/vim-submode' # {{{2
hook_add = '''
source $VIM_PATH/rc/vim-submode.vim
'''

# [[plugins]]
# repo = 'Konfekt/FastFold' # {{{2
# on_path = '.*'
# hokk_add = '''
# source $VIM_PATH/rc/FastFold.vim
# '''

# [[plugins]]
# repo = 'arecarn/vim-fold-cycle'

[[plugins]]
repo = 'junegunn/vim-easy-align' # {{{2
on_map = {v = '<Plug>'}
hook_add = '''
source $VIM_PATH/rc/vim-easy-align.vim
'''

[[plugins]]
repo = 'glidenote/memolist.vim' # {{{2
on_cmd = ['Memolist', 'MemoNew', 'MemoGrep']
hook_add = '''
source $VIM_PATH/rc/memolist.vim
'''

[[plugins]]
repo = 'vim-scripts/autodate.vim' # {{{2
hook_add = '''
source $VIM_PATH/rc/autodate.vim
'''

[[plugins]]
repo = 'mbbill/undotree' # {{{2
on_cmd = 'UndotreeToggle'
hook_add = '''
source $VIM_PATH/rc/undotree.vim
'''

[[plugins]]
repo = 'tpope/vim-repeat' # {{{2

[[plugins]]
repo = 'tyru/capture.vim' # {{{2
on_cmd = ['Capture']

[[plugins]]
repo = 'Shougo/echodoc.vim' # {{{2
depends = ['context_filetype.vim']
on_event = "InsertEnter"
hook_add = '''
source $VIM_PATH/rc/echodoc.vim
'''

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim' # {{{2
on_cmd = 'CtrlP'
hook_add = '''
source $VIM_PATH/rc/ctrlp.vim
'''
if = "g:dein_use_ctrlp"

[[plugins]]
repo = 'liuchengxu/vim-clap' # {{{2
on_cmd = ['Clap']
hook_add = '''
source $VIM_PATH/rc/vim-clap.vim
'''
hook_post_update = '''
call clap#helper#build_all()
'''
if = "g:dein_use_clap"

[[plugins]]
repo = 'kaneshin/ctrlp-filetype' # {{{2
on_source = 'ctrlp.vim'
[[plugins]]
repo = 'kaneshin/ctrlp-memolist' # {{{2
on_source = 'ctrlp.vim'
[[plugins]]
repo = 'mattn/ctrlp-launcher' # {{{2
on_source = 'ctrlp.vim'
[[plugins]]
repo = 'mattn/ctrlp-mark' # {{{2
on_source = 'ctrlp.vim'
[[plugins]]
repo = 'mattn/ctrlp-vimhelpjp' # {{{2
depends = 'webapi-vim'
on_source = 'ctrlp.vim'
on_cmd = 'VimHelpJp'
[[plugins]]
repo = 'ompugao/ctrlp-history' # {{{2
on_source = 'ctrlp.vim'

# [[plugins]]
# repo = 'yuttie/comfortable-motion.vim' # {{{2

[[plugins]]
repo = 'dhruvasagar/vim-table-mode' # {{{2
on_ft = 'markdown'

# [[plugins]]
# repo = 'kopischke/vim-stay' # {{{2

[[plugins]]
repo = 'qpkorr/vim-renamer' # {{{2
on_cmd = 'Renamer'
hook_add = '''
source $VIM_PATH/rc/vim-renamer.vim
'''

[[plugins]]
repo = 'itchyny/vim-external' # {{{2
on_map = '<Plug>'
hook_add = '''
source $VIM_PATH/rc/vim-external.vim
'''

[[plugins]]
repo = 'Shougo/defx.nvim' # {{{2
on_cmd = ['Defx']
if = '!g:is_windows && has("python3")'
hook_add = '''
source $VIM_PATH/rc/defx.vim
'''

[[plugins]]
repo = 'lambdalisue/vim-findent' # {{{2

[[plugins]]
repo = 'tmux-plugins/vim-tmux-focus-events' # {{{2
if  = '!g:is_windows'

[[plugins]]
repo = 'roxma/vim-tmux-clipboard' # {{{2
if  = '!g:is_windows'

[[plugins]]
repo = 'roxma/nvim-yarp' # {{{2
if = '!has("nvim")'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc' # {{{2
if = '!has("nvim")'

[[plugins]]
repo = 'mattn/webapi-vim' # {{{2
lazy = 1

# [[plugins]]
# repo = 'lambdalisue/fern.vim' # {{{2
# on_cmd = 'Fern'
# hook_add = '''
# source $VIM_PATH/rc/fern.vim
# '''

[[plugins]]
repo = 'editorconfig/editorconfig-vim' # {{{2

[[plugins]]
repo = 'lambdalisue/suda.vim' # {{{2
hook_add = '''
source $VIM_PATH/rc/suda.vim
'''
if = "g:is_windows"

[[plugins]]
repo = 'osyo-manga/vim-reanimate' # {{{2
lazy = 1
hook_add = '''
source $VIM_PATH/rc/vim-reanimate.vim
'''

[[plugins]]
repo = 'haya14busa/vim-edgemotion' # {{{2
on_map = '<Plug>'
hook_add = '''
source $VIM_PATH/rc/vim-edgemotion.vim
'''

[[plugins]]
repo = 'LumaKernel/vim-messages-qf' # {{{2
on_cmd = ['MessagesQF']
hook_add = '''
source $VIM_PATH/rc/vim-messages-qf.vim
'''

[[plugins]]
repo = 'thinca/vim-quickrun' # {{{2
on_map = '<Plug>'
hook_add = '''
source $VIM_PATH/rc/vim-quickrun.vim
'''

[[plugins]]
repo = 'lambdalisue/vim-quickrun-neovim-job' # {{{2
on_source = 'vim-quickrun'

[[plugins]]
repo = 'twitvim/twitvim' # {{{2
on_cmd = ['FriendsTwitter', 'UserTwitter', 'RepliesTwitter', 'DMTwitter']

[[plugins]]
repo = 'tyru/open-browser.vim' # {{{2
on_source = ['twitvim']

# ==================== Denite ==================== {{{1
[[plugins]]
repo = 'Shougo/denite.nvim' # {{{2
depends = 'neomru.vim'
on_cmd = 'Denite'
if = "has('python3')"
hook_add = '''
source $VIM_PATH/rc/denite.nvim
'''

[[plugins]]
repo = 'Shougo/neomru.vim' # {{{2
on_source = 'denite.nvim'

[[plugins]]
repo = 'Shougo/junkfile.vim' # {{{2
on_source = 'denite.nvim'
on_cmd = 'JunkfileOpen'

# ==================== Search ==================== {{{1
[[plugins]]
repo = 'haya14busa/vim-asterisk' # {{{2
on_map = '<Plug>'
hook_add = '''
source $VIM_PATH/rc/vim-asterisk.vim
'''

[[plugins]]
repo = 't9md/vim-quickhl' # {{{2
hook_add = '''
source $VIM_PATH/rc/vim-quickhl.vim
'''
[[plugins]]
repo = 'unblevable/quick-scope' # {{{2
hook_add = '''
source $VIM_PATH/rc/quick-scope.vim
'''

[[plugins]]
repo = 'itchyny/vim-parenmatch' # {{{2
hook_add = '''
source $VIM_PATH/rc/vim-parenmatch.vim
'''

[[plugins]]
repo = 'itchyny/vim-cursorword' # {{{2
hook_add = '''
source $VIM_PATH/rc/vim-cursorword.vim
'''

[[plugins]]
repo = 'RRethy/vim-illuminate' # {{{2
hook_add = '''
source $VIM_PATH/rc/vim-illuminate.vim
'''

[[plugins]]
repo = 'thinca/vim-qfreplace' # {{{2
on_ft = ['quickfix']

[[plugins]]
repo = 'mox-mox/vim-localsearch' # {{{2
on_map = {n = '<Plug>'}
hook_add = '''
source $VIM_PATH/rc/vim-localsearch.vim
'''

[[plugins]]
repo = 'mhinz/vim-grepper' # {{{2
on_cmd = 'Grepper'
on_map = '<Plug>'
hook_add = '''
source $VIM_PATH/rc/vim-grepper.vim
'''

[[plugins]]
repo = 'tsuyoshicho/vim-fg' # {{{2
on_cmd = ['Fg']

# ==================== Operators ================= {{{1
[[plugins]]
repo = 'kana/vim-operator-user' # {{{2
on_map = '<Plug>'

[[plugins]]
repo = 'kana/vim-operator-replace' # {{{2
depends = 'vim-operator-user'
on_map = '<Plug>'
hook_add = '''
source $VIM_PATH/rc/vim-operator-replace.vim
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround' # {{{2
depends = 'vim-operator-user'
on_map = '<Plug>'
hook_add = '''
source $VIM_PATH/rc/vim-operator-surround.vim
'''

[[plugins]]
repo = 'osyo-manga/vim-operator-search' # {{{2
depends = 'vim-operator-user'
on_map = '<Plug>'
hook_add = '''
source $VIM_PATH/rc/vim-operator-search.vim
'''

[[plugins]]
repo = 'haya14busa/vim-operator-flashy' # {{{2
depends = 'vim-operator-user'
on_map = '<Plug>'
hook_add = '''
source $VIM_PATH/rc/vim-operator-flashy.vim
'''

# ==================== Textobjs ================== {{{1
[[plugins]]
repo = 'kana/vim-textobj-user' # {{{2
on_map = '<Plug>'


[[plugins]]
repo = 'kana/vim-textobj-entire' # {{{2
depends = 'vim-textobj-user'
on_map = {ox = '<Plug>'}
hook_add = '''
source $VIM_PATH/rc/vim-textobj-entire.vim
'''

[[plugins]]
repo = 'kana/vim-textobj-fold' # {{{2
depends = 'vim-textobj-user'
on_map = {ox = '<Plug>'}
hook_add = '''
source $VIM_PATH/rc/vim-textobj-fold.vim
'''

[[plugins]]
repo = 'kana/vim-textobj-function' # {{{2
depends = 'vim-textobj-user'
on_map = {ox = '<Plug>'}
hook_add = '''
source $VIM_PATH/rc/vim-textobj-function.vim
'''

[[plugins]]
repo = 'kana/vim-textobj-indent' # {{{2
depends = 'vim-textobj-user'
on_map = {ox = '<Plug>'}
hook_add = '''
source $VIM_PATH/rc/vim-textobj-indent.vim
'''

[[plugins]]
repo = 'gilligan/textobj-lastpaste' # {{{2
depends = 'vim-textobj-user'
on_map = {ox = '<Plug>'}
hook_add = '''
source $VIM_PATH/rc/textobj-lastpaste.vim
'''

[[plugins]]
repo = 'kana/vim-textobj-line' # {{{2
depends = 'vim-textobj-user'
on_map = {ox = '<Plug>'}

# ==================== Comment =================== {{{1
[[plugins]]
repo = 'tyru/caw.vim' # {{{2
on_map = '<Plug>'
hook_add = '''
source $VIM_PATH/rc/caw.vim
'''

# ==================== Yank/Paste ================ {{{1
[[plugins]]
repo = 'LeafCage/yankround.vim' # {{{2
hook_add = '''
source $VIM_PATH/rc/yankround.vim
'''

# ==================== Git ======================= {{{1
[[plugins]]
repo = 'itchyny/vim-gitbranch' # {{{2

[[plugins]]
repo = 'lambdalisue/gina.vim' # {{{2
hook_add = '''
source $VIM_PATH/rc/gina.vim
'''

[[plugins]]
repo = 'rhysd/git-messenger.vim' # {{{2
on_cmd = 'GitMessenger'
on_map = '<Plug>(git-messenger'
hook_add = '''
source $VIM_PATH/rc/git-messenger.vim
'''

# ==================== Filetype (all) ============= {{{1
[[plugins]]
repo = 'sheerun/vim-polyglot'
hook_add = '''
source $VIM_PATH/rc/vim-polyglot.vim
'''

# ==================== Filetype (plantuml) ======= {{{1
[[plugins]]
repo = 'scrooloose/vim-slumlord' # {{{2
on_ft = 'plantuml'
hook_add = '''
source $VIM_PATH/rc/vim-slumlord.vim
'''

# ==================== Filetype (log) ============ {{{1
# [[plugins]]
# repo = 'dzeban/vim-log-syntax' # {{{2
# on_ft = 'log'

# ==================== Filetype (markdown) ======= {{{1
# [[plugins]]
# repo = 'rhysd/vim-gfm-syntax'
# on_ft = 'markdown'

[[plugins]]
repo = 'nelstrom/vim-markdown-folding' # {{{2
on_ft = 'markdown'

[[plugins]]
repo = 'iamcco/markdown-preview.nvim' # {{{2
on_ft = 'markdown'
on_cmd = 'MarkdownPreview'
hook_post_update = '''
call dein#source('markdown-preview.nvim')
call mkdp#util#install()
'''

# ==================== Filetype (Rust) =========== {{{1
# [[plugins]]
# repo = 'rust-lang/rust.vim' # {{{2
# on_ft = 'rust'
# if = "executable('cargo')"
# hook_add = '''
# source $VIM_PATH/rc/rust.vim
# '''

[[plugins]]
repo = 'rhysd/rust-doc.vim' # {{{2
on_ft = 'rust'


# ==================== Filetype (Haskell) ======== {{{1
[[plugins]]
repo = 'eagletmt/ghcmod-vim' # {{{2
on_ft = 'haskell'
if = "executable('stack')"
build = 'stack install ghc-mod'
hook_add = '''
source $VIM_PATH/rc/ghcmod-vim.vim
'''

[[plugins]]
repo = 'eagletmt/neco-ghc' # {{{2
on_ft = 'haskell'
hook_add = '''
source $VIM_PATH/rc/neco-ghc.vim
'''

[[plugins]]
repo = 'itchyny/vim-haskell-indent' # {{{2
on_ft = 'haskell'

[[plugins]]
repo = 'itchyny/vim-haskell-sort-import' # {{{2
on_ft = 'haskell'
hook_add = '''
source $VIM_PATH/rc/vim-haskell-sort-import.vim
'''


# ==================== Filetype (SQL) ============ {{{1
# [[plugins]]
# repo = 'mattn/vim-sqlfmt'
# on_ft = 'sql'
# hook_add = '''
#   au MyAutoCmd BufWrite *.sql :SQLFmt
# '''

[[plugins]]
repo = 'b4b4r07/vim-sqlfmt' # {{{2
on_ft = 'sql'
build = 'go get github.com/jackc/sqlfmt'
hook_add = '''
source $VIM_PATH/rc/vim-sqlfmt.vim
'''

# ==================== Filetype (purescript) ===== {{{1
[[plugins]]
repo = 'FrigoEU/psc-ide-vim' # {{{2
on_ft = 'purescript'


# ==================== Filetype (csv) ============ {{{1
[[plugins]]
repo = 'mechatroner/rainbow_csv' # {{{2
on_ft = 'csv'

# ==================== After ftplugin ============ {{{1
[ftplugin]
_ = '''
set formatoptions-=ro
'''

dosbatch = '''
setl fenc=cp932 ff=dos
'''

html = '''
let g:html_indent_inctags = "html,body,head,tbody"
let g:html_syntax_folding = 1
setl noexpandtab
setl ts=4 sw=4 sts=0
setl foldmethod=syntax
'''

csv = '''
setl nowrap
'''

log = '''
setl nowrap
'''

mail = '''
setl ff=dos
setl fenc=cp932
'''

markdown = '''
setl formatoptions+=t
setl conceallevel=0
set background=light
'''

go = '''
setl completeopt+=preview
'''

ps1 = '''
setl ts=2 sw=2 sts=0
setl foldmethod=syntax
'''

python = '''
setl cinwords=if,elif,else,for,while,try,except,finally,def,class
setl expandtab
setl ts=8 sw=4 sts=4
setl foldmethod=indent foldlevel=99
'''

xml = '''
setl noexpandtab
setl ts=4 sw=4 sts=0

let g:xml_syntax_folding = 1
setl foldmethod=syntax
'''

elm = '''
setl ts=4 sw=4 sts=0
'''

