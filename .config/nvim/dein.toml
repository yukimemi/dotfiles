# =============================================================================
# File       : dein.toml
# Author     : yukimemi
# Last Change: 2022/10/16 13:27:57.
# =============================================================================

# ==================== Dein ======================

[[plugins]]
repo = "Shougo/dein.vim"

[[plugins]]
repo = 'wsdjeg/dein-ui.vim'
if = 1
on_cmd = 'DeinUpdate'

# ==================== Visual ====================

[[plugins]]
repo = 'Yggdroot/indentLine'
if = "!has('nvim')"
hook_add = '''
source $VIM_PATH/rc/indentLine.vim
'''

[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'
if = "has('nvim') && g:plugin_use_indent_blankline"
on_source = 'nvim-treesitter'
hook_source = '''
source $VIM_PATH/rc/indent-blankline.nvim
'''

[[plugins]]
repo = 'yuki-yano/dps-indent-line'
if = "has('nvim') && g:plugin_use_dps_indent_line"

[[plugins]]
repo = "andymass/vim-matchup"
if = 1
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'itchyny/vim-cursorword'
if = 1
hook_add = '''
source $VIM_PATH/rc/vim-cursorword.vim
'''
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'itchyny/vim-external'
if = 0
hook_add = '''
source $VIM_PATH/rc/vim-external.vim
'''
on_map = '<Plug>'

[[plugins]]
repo = 'itchyny/vim-parenmatch'
if = 1
hook_add = '''
source $VIM_PATH/rc/vim-parenmatch.vim
'''
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'mopp/smartnumber.vim'
if = 1
on_event = ["CursorHold", "InsertEnter", "CursorMoved", "FocusLost"]

[[plugins]]
repo = "lambdalisue/glyph-palette.vim"
if = "g:plugin_use_fern"

[[plugins]]
repo = "lambdalisue/nerdfont.vim"
if = "g:plugin_use_fern"

[[plugins]]
repo = 'lambdalisue/seethrough.vim'
if = "!has('gui')"

[[plugins]]
repo = 'thinca/vim-fontzoom'
if = "has('gui')"

[[plugins]]
repo = 'thinca/vim-ft-diff_fold'
if = 0
on_event = ["CursorHold", "InsertEnter", "CursorMoved", "FocusLost"]

[[plugins]]
repo = 'luochen1990/rainbow'
if = "!has('nvim')"
hook_add = '''
source $VIM_PATH/rc/rainbow.vim
'''
on_event = ["CursorHold", "CursorMoved"]

[[plugins]]
repo = 'mattn/transparency-windows-vim'
if = "g:is_windows && has('gui') && !has('nvim')"
hook_add = '''
source $VIM_PATH/rc/transparency-windows-vim.vim
'''

[[plugins]]
repo = 'mattn/vimtweak'
if = "g:is_windows && !has('nvim')"

[[plugins]]
repo = "ntpeters/vim-better-whitespace"
if = 1
hook_add = '''
source $VIM_PATH/rc/vim-better-whitespace.vim
'''
on_event = ['CursorHold', 'FocusLost']
on_cmd = 'StripWhiteSpace'

[[plugins]]
repo = 't9md/vim-quickhl'
if = 1
hook_add = '''
source $VIM_PATH/rc/vim-quickhl.vim
'''
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'LumaKernel/nvim-visual-eof.lua'
# if = "has('nvim')"
if = 1
hook_add = '''
source $VIM_PATH/rc/nvim-visual-eof.lua.vim
'''

[[plugins]]
repo = 'DanilaMihailov/beacon.nvim'
if = "g:plugin_use_beacon"
on_event = ['CursorHold', 'FocusLost']
hook_add = '''
source $VIM_PATH/rc/beacon.nvim
'''

[[plugins]]
repo = 'psliwka/vim-smoothie'
if = "!exists('g:nvui') && g:plugin_use_smoothie"
on_event = ['CursorHold', 'FocusLost']
hook_add = '''
source $VIM_PATH/rc/vim-smoothie.vim
'''

[[plugins]]
repo = 'gen740/SmoothCursor.nvim'
if = 'has("nvim")'
on_event = ['CursorHold', 'FocusLost']
hook_source = '''
source $VIM_PATH/rc/SmoothCursor.nvim
'''

# colorscheme

[[plugins]]
repo = "NLKNguyen/papercolor-theme"

[[plugins]]
repo = 'bluz71/vim-nightfly-guicolors'

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'drewtempelmeyer/palenight.vim'

[[plugins]]
repo = 'folke/tokyonight.nvim'
if = 'has("nvim")'

[[plugins]]
repo = 'gkeep/iceberg-dark'

[[plugins]]
repo = 'joshdick/onedark.vim'

[[plugins]]
repo = 'kjssad/quantum.vim'

[[plugins]]
repo = 'rhysd/vim-color-spring-night'

[[plugins]]
repo = 'romgrk/github-light.vim'

[[plugins]]
repo = 'sainnhe/gruvbox-material'
hook_add = '''
source $VIM_PATH/rc/gruvbox-material.vim
'''

[[plugins]]
repo = 'doums/darcula'

[[plugins]]
repo = 'severij/vadelma'

[[plugins]]
repo = 'yuttie/hydrangea-vim'

[[plugins]]
repo = 'glepnir/zephyr-nvim'
if = 'has("nvim")'

[[plugins]]
repo = 'adrian5/oceanic-next-vim'

[[plugins]]
repo = 'sainnhe/edge'
hook_add = '''
source $VIM_PATH/rc/edge.vim
'''

[[plugins]]
repo = 'tiagovla/tokyodark.nvim'
if = 'has("nvim")'
hook_add = '''
source $VIM_PATH/rc/tokyodark.nvim
'''

[[plugins]]
repo = 'ChristianChiarulli/nvcode-color-schemes.vim'

[[plugins]]
repo = 'rafamadriz/neon'
if = 'has("nvim")'

[[plugins]]
repo = 'Matsuuu/pinkmare'
hook_add = '''
source $VIM_PATH/rc/pinkmare.vim
'''

[[plugins]]
repo = 'srcery-colors/srcery-vim'

[[plugins]]
repo = 'RRethy/nvim-base16'

[[plugins]]
repo = 'marko-cerovac/material.nvim'
if = 'has("nvim")'

[[plugins]]
repo = 'fenetikm/falcon'

[[plugins]]
repo = 'PHSix/nvim-hybrid'
if = 'has("nvim")'

[[plugins]]
repo = '4513ECHO/vim-colors-hatsunemiku'

[[plugins]]
repo = 'base16-project/base16-vim'

[[plugins]]
repo = 'cocopon/inspecthi.vim'
on_cmd = 'Inspecthi'


# ==================== Treesitter ================
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
if = 'has("nvim") && g:plugin_use_treesitter'
hook_post_update = 'TSUpdate'
hook_source = '''
source $VIM_PATH/rc/nvim-treesitter.vim
'''
on_event = 'BufRead'

[[plugins]]
repo = 'p00f/nvim-ts-rainbow'
if = 'has("nvim")'
on_source = 'nvim-treesitter'

# ==================== Utility ===================

[[plugins]]
repo = 'lewis6991/impatient.nvim'
if = 'has("nvim")'

[[plugins]]
repo = 'AndrewRadev/linediff.vim'
on_cmd = ['Linediff', 'LinediffReset', 'LinediffShow', 'LinediffAdd']

[[plugins]]
repo = 'LeafCage/yankround.vim'
if = 1
hook_add = '''
source $VIM_PATH/rc/yankround.vim
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
if = 1
lazy = 1
hook_source = '''
let g:context_filetype#ignore_patterns = {
    \ 'toml': ['^\s*#\s*'],
    \ }
'''

[[plugins]]
repo = 'Shougo/echodoc.vim'
if = 1
on_event = 'InsertEnter'
hook_source = '''
source $VIM_PATH/rc/echodoc.vim
'''

[[plugins]]
repo = 'airblade/vim-rooter'
if = 0
hook_add = '''
source $VIM_PATH/rc/vim-rooter.vim
'''
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'mattn/vim-findroot'
if = 1
on_event = ['CursorHold', 'FocusLost']
hook_add = '''
source $VIM_PATH/rc/vim-findroot.vim
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
if = 1
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = "gelguy/wilder.nvim"
if = '!g:plugin_use_ddc'
depends = 'nerdfont.vim'
hook_source = '''
source $VIM_PATH/rc/wilder.nvim
'''
on_map = [':', '/', '?']

[[plugins]]
repo = 'haya14busa/vim-edgemotion'
if = "g:plugin_use_edgemotion"
hook_add = '''
source $VIM_PATH/rc/vim-edgemotion.vim
'''
on_map = '<Plug>'

[[plugins]]
repo = 'tyru/columnskip.vim'
if = "g:plugin_use_columnskip"
hook_add = '''
source $VIM_PATH/rc/columnskip.vim
'''
on_map = '<Plug>'

[[plugins]]
repo = 'junegunn/vim-easy-align'
if = 1
hook_add = '''
source $VIM_PATH/rc/vim-easy-align.vim
'''
on_map = { v = '<Plug>(EasyAlign)' }

[[plugins]]
repo = "lambdalisue/readablefold.vim"
if = 1
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'lambdalisue/vim-findent'
if = 1
hook_add = '''
source $VIM_PATH/rc/vim-findent.vim
'''
on_cmd = 'Findent'

[[plugins]]
repo = 'mattn/vim-sonictemplate'
if = 1
hook_add = '''
source $VIM_PATH/rc/vim-sonictemplate.vim
'''
on_cmd = 'Template'

[[plugins]]
repo = 'mattn/webapi-vim'
if = 1
lazy = 1

[[plugins]]
repo = 'mbbill/undotree'
if = 0
hook_add = '''
source $VIM_PATH/rc/undotree.vim
'''
on_cmd = ['UndotreeToggle']

[[plugins]]
repo = 'nicwest/vim-camelsnek'
if = 0
hook_add = '''
source $VIM_PATH/rc/vim-camelsnek.vim
'''
on_cmd = ['Snek', 'Camel', 'CamelB', 'Kebab']

[[plugins]]
repo = 'qpkorr/vim-renamer'
if = 1
hook_add = '''
source $VIM_PATH/rc/vim-renamer.vim
'''
on_cmd = ['Renamer']

[[plugins]]
repo = 'rbtnn/vim-gloaded'
if = 1

[[plugins]]
repo = 'rbtnn/vim-vimscript_lasterror'
if = 0
on_cmd = 'VimscriptLastError'

[[plugins]]
repo = 'rbtnn/vim-vimscript_indentexpr'
if = 0
on_ft = 'vim'

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

[[plugins]]
repo = 'sentriz/vim-print-debug'
if = 0
hook_add = '''
source $VIM_PATH/rc/vim-print-debug.vim
'''
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'thinca/vim-ambicmd'
if = 1
hook_add = '''
source $VIM_PATH/rc/vim-ambicmd.vim
'''

[[plugins]]
repo = 'thinca/vim-localrc'
if = 0

[[plugins]]
repo = 'thinca/vim-prettyprint'
if = 1
on_cmd = 'PP'

[[plugins]]
repo = 'thinca/vim-qfreplace'
if = 1
on_ft = ['quickfix', 'qf']

[[plugins]]
repo = 'thinca/vim-submode'
if = 1
hook_add = '''
source $VIM_PATH/rc/vim-submode.vim
'''
on_event = 'BufRead'

[[plugins]]
repo = 'tpope/vim-repeat'
if = 1

[[plugins]]
repo = 'tyru/open-browser.vim'
if = 1
hook_add = '''
source $VIM_PATH/rc/open-browser.vim
'''

[[plugins]]
repo = 'tyru/restart.vim'
if = 0
on_cmd = 'Restart'

[[plugins]]
repo = 'thinca/vim-singleton'
if = "!has('nvim') && has('clientserver')"
hook_source = '''
source $VIM_PATH/rc/vim-singleton.vim
'''

[[plugins]]
repo = 'machakann/vim-swap'
if = 0

[[plugins]]
repo = 'Bakudankun/BackAndForward.vim'
if = 1
on_event = ['CursorHold', 'FocusLost']
hook_add = '''
source $VIM_PATH/rc/BackAndForward.vim
'''

[[plugins]]
repo = 'MattesGroeger/vim-bookmarks'
if = 1

[[plugins]]
repo = 'itchyny/vim-winfix'
if = 0
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'habamax/vim-winlayout'
if = 0
on_cmd = ['WinlayoutInspectLayout', 'WinlayoutInspectRestcmd']

[[plugins]]
repo = 'rbtnn/vim-layout'
if = 0
on_cmd = ['LayoutSave', 'LayoutLoad']
hook_add = '''
source $VIM_PATH/rc/vim-layout.vim
'''

[[plugins]]
repo = 'osyo-manga/vim-reanimate'
if = 0
hook_add = '''
source $VIM_PATH/rc/vim-reanimate.vim
'''
on_cmd = ['ReanimateSave', 'ReanimateLoad', 'ReanimateLoadLatest']

[[plugins]]
repo = 't9md/vim-choosewin'
if = 0
hook_add = '''
source $VIM_PATH/rc/vim-choosewin.vim
'''
on_event = 'BufRead'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
if = 0
# if = "has('nvim')"
lazy = 1

[[plugins]]
repo = 'kevinhwang91/nvim-bqf'
if = "has('nvim')"

[[plugins]]
repo = 'cohama/lexima.vim'
if = "g:plugin_use_lexima"
hook_add = '''
" source $VIM_PATH/rc/lexima.vim
'''
on_event = "InsertEnter"

[[plugins]]
repo = 'mattn/vim-lexiv'
if = "g:plugin_use_lexiv"
on_event = "InsertEnter"

[[plugins]]
repo = 'rcarriga/nvim-notify'
if = "has('nvim')"
on_lua = 'notify'
on_source = '''
lua vim.notify = require('notify')
'''

[[plugins]]
repo = 'mattn/vim-notification'
if = "!has('nvim')"
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'liuchengxu/vista.vim'
if = 1
on_cmd = 'Vista'

[[plugins]]
repo = 'tweekmonster/startuptime.vim'
if = 1
on_cmd = 'StartupTime'

[[plugins]]
repo = 'unblevable/quick-scope'
if = "g:plugin_use_quickscope"
on_event = ['CursorHold', 'FocusLost']
hook_add = '''
source $VIM_PATH/rc/quick-scope.vim
'''

[[plugins]]
repo = 'deris/vim-shot-f'
if = "g:plugin_use_shotf"
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'rhysd/clever-f.vim'
if = "g:plugin_use_cleverf"
on_event = ['CursorHold', 'FocusLost']
hook_add = '''
source $VIM_PATH/rc/clever-f.vim
'''

[[plugins]]
repo = 'vim-jp/vital.vim'
if = 0
on_cmd = 'Vitalize'

[[plugins]]
repo = 'thinca/vim-themis'
if = 0
lazy = 1

[[plugins]]
repo = 'thinca/vim-partedit'
if = 1
on_cmd = 'Partedit'

[[plugins]]
repo = 'fuenor/JpFormat.vim'
if = 0
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'osyo-manga/vim-jplus'
if = 0
on_map = {n = '<Plug>'}
hook_add = '''
source $VIM_PATH/rc/vim-jplus.vim
'''

[[plugins]]
repo = 'djoshea/vim-autoread'
if = 0
on_cmd = ['WatchForChanges', 'WatchForChangesWhileInThisBuffer', 'WatchForChangesAllFile']

[[plugins]]
repo = 'stevearc/stickybuf.nvim'
if = "has('nvim')"
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'cosminadrianpopescu/vim-tail'
if = 1
on_cmd = ['TailStart', 'TailStop']

[[plugins]]
repo = 'skanehira/qfopen.vim'
if = 1
on_ft = ['quickfix', 'qf']
hook_add = '''
source $VIM_PATH/rc/qfopen.vim
'''

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
if = 0

[[plugins]]
repo = 'sunaku/tmux-navigate'
if = '!g:is_windows'

[[plugins]]
repo = '4513ECHO/vim-vimhelp-url'
if = 1
on_event = 'HelpUrl'

[[plugins]]
repo = 'uga-rosa/ccc.nvim'
if = "has('nvim')"
on_cmd = 'CccPick'
hook_source = '''
source $VIM_PATH/rc/ccc.nvim
'''

# ==================== Test ======================
[[plugins]]
repo = 'vim-test/vim-test'
hook_add = '''
source $VIM_PATH/rc/vim-test.vim
'''
on_cmd = ['TestNearest', 'TestFile', 'TestSuite', 'TestLast', 'TestVisit']

# ==================== Comment ===================

[[plugins]]
repo = 'Shougo/junkfile.vim'
if = 1
on_cmd = 'JunkfileOpen'
on_source = 'ddu.vim'

[[plugins]]
repo = 'glidenote/memolist.vim'
if = 1
hook_add = '''
source $VIM_PATH/rc/memolist.vim
'''
on_cmd = ['MemoList', 'MemoNew', 'MemoGrep']

[[plugins]]
repo = 'tyru/caw.vim'
if = 1
hook_add = '''
source $VIM_PATH/rc/caw.vim
'''
on_map = '<Plug>'

# ==================== App =======================

[[plugins]]
repo = 'twitvim/twitvim'
if = 0
hook_add = '''
source $VIM_PATH/rc/twitvim.vim
'''
on_cmd = ['FriendsTwitter', 'UserTwitter', 'RepliesTwitter', 'DMTwitter']


# ==================== Git =======================

[[plugins]]
repo = 'itchyny/vim-gitbranch'
if = 1
lazy = 1

[[plugins]]
repo = 'lambdalisue/gina.vim'
if = "g:plugin_use_gina"
hook_add = '''
source $VIM_PATH/rc/gina.vim
'''
hook_source = '''
source $VIM_PATH/rc/gina_source.vim
'''
on_cmd = 'Gina'

[[plugins]]
repo = 'rhysd/committia.vim'
if = "!g:is_windows"

[[plugins]]
repo = 'rhysd/conflict-marker.vim'
if = 1
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'mhinz/vim-signify'
if = 'g:plugin_use_signify'
on_event = ['CursorHold', 'FocusLost']
hook_add = '''
source $VIM_PATH/rc/vim-signify.vim
'''

# ==================== Textobjs ==================

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'gilligan/textobj-lastpaste'
if = 1
depends = 'vim-textobj-user'
hook_add = '''
source $VIM_PATH/rc/textobj-lastpaste.vim
'''
on_map = { n = '<Plug>', x = '<Plug>', o = '<Plug>' }

[[plugins]]
repo = 'kana/vim-textobj-entire'
if = 1
depends = 'vim-textobj-user'
hook_add = '''
source $VIM_PATH/rc/vim-textobj-entire.vim
'''
on_map = { n = '<Plug>', x = '<Plug>', o = '<Plug>' }

[[plugins]]
repo = 'kana/vim-textobj-fold'
if = 1
depends = 'vim-textobj-user'
hook_add = '''
source $VIM_PATH/rc/vim-textobj-fold.vim
'''
on_map = { n = '<Plug>', x = '<Plug>', o = '<Plug>' }

[[plugins]]
repo = 'kana/vim-textobj-indent'
if = 1
depends = 'vim-textobj-user'
hook_add = '''
source $VIM_PATH/rc/vim-textobj-indent.vim
'''
on_map = { n = '<Plug>', x = '<Plug>', o = '<Plug>' }

[[plugins]]
repo = 'kana/vim-textobj-line'
if = 1
depends = 'vim-textobj-user'
hook_add = '''
source $VIM_PATH/rc/vim-textobj-line.vim
'''
on_map = { n = '<Plug>', x = '<Plug>', o = '<Plug>' }

[[plugins]]
repo = 'machakann/vim-textobj-delimited'
if = 0
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'mattn/vim-textobj-url'
if = 0
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'osyo-manga/vim-textobj-multiblock'
if = 0
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'rbtnn/vim-textobj-string'
if = 0
depends = 'vim-textobj-user'
on_event = ['CursorHold', 'FocusLost']

# ==================== Operators =================

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'
if = 1
depends = 'vim-operator-user'
hook_add = '''
source $VIM_PATH/rc/vim-operator-replace.vim
'''
on_map = '<Plug>'

[[plugins]]
repo = 'osyo-manga/vim-operator-search'
if = 1
depends = 'vim-operator-user'
hook_add = '''
source $VIM_PATH/rc/vim-operator-search.vim
'''
on_map = '<Plug>'

[[plugins]]
repo = 'osyo-manga/vim-operator-stay-cursor'
if = 1
depends = 'vim-operator-user'
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'machakann/vim-sandwich'
if = 1
depends = 'vim-operator-user'
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'osyo-manga/vim-operator-highlighter'
if = 1
depends = 'vim-operator-user'
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'thinca/vim-operator-sequence'
if = 0
depends = 'vim-operator-user'
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'tyru/operator-html-escape.vim'
if = 1
depends = 'vim-operator-user'
hook_add = '''
source $VIM_PATH/rc/operator-html-escape.vim
'''
on_map = '<Plug>'


# ==================== Search ====================

[[plugins]]
repo = 'haya14busa/vim-asterisk'
if = 1
hook_add = '''
source $VIM_PATH/rc/vim-asterisk.vim
'''
on_map = '<Plug>'

[[plugins]]
repo = 'markonm/traces.vim'
if = 1
on_event = ["CmdlineEnter", "CmdwinEnter"]

[[plugins]]
repo = 'osyo-manga/vim-anzu'
if = 1
on_map = '<Plug>'
hook_add = '''
source $VIM_PATH/rc/vim-anzu.vim
'''

[[plugins]]
repo = 'inside/vim-search-pulse'
if = 1
hook_add = '''
source $VIM_PATH/rc/vim-search-pulse.vim
'''

[[plugins]]
repo = 'monaqa/modesearch.vim'
if = 1
hook_add = '''
source $VIM_PATH/rc/modesearch.vim
'''

# ==================== Shell =====================

[[plugins]]
repo = 'Shougo/deol.nvim'
if = 0
hook_add = '''
source $VIM_PATH/rc/deol.nvim
'''
on_cmd = ['Deol', 'DeolCd', 'DeolEdit']

[[plugins]]
repo = 'voldikss/vim-floaterm'
if = "g:plugin_use_floaterm"
on_cmd = 'FloatermToggle'
hook_add = '''
source $VIM_PATH/rc/vim-floaterm.vim
'''

[[plugins]]
repo = 'kassio/neoterm'
if = "has('nvim') && g:plugin_use_neoterm"
on_cmd = 'Tnew'
hook_add = '''
source $VIM_PATH/rc/neoterm.vim
'''

[[plugins]]
repo = 'akinsho/toggleterm.nvim'
if = "has('nvim') && g:plugin_use_toggleterm"
on_cmd = 'ToggleTerm'
hook_add = '''
source $VIM_PATH/rc/toggleterm.nvim
'''

# ==================== denops ====================

[[plugins]]
repo = 'vim-denops/denops.vim'
on_event = ['CursorHold', 'FocusLost']
hook_add = '''
source $VIM_PATH/rc/denops.vim
'''

[[plugins]]
repo = 'vim-denops/denops-shared-server.vim'

[[plugins]]
repo = 'Shougo/ddc.vim'
if = "g:plugin_use_ddc"
depends = ['context_filetype.vim', 'denops.vim', 'pum.vim']
on_event = ['InsertEnter', 'CursorHold']
hook_source = '''
source $VIM_PATH/rc/ddc.vim
'''

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-zsh'
if = "g:plugin_use_ddc"
depends = 'ddc.vim'
on_ft = 'zsh'

[[plugins]]
repo = 'Shougo/ddc-mocword'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_length'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-converter_truncate_abbr'
on_source = 'ddc.vim'

[[plugins]]
repo = 'LumaKernel/ddc-file'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-buffer'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-omni'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-cmdline'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-input'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-cmdline-history'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-line'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-rg'
if = "executable('rg')"
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/pum.vim'
if = 'g:plugin_use_ddc'
lazy = 1
hook_source = '''
source $VIM_PATH/rc/pum.vim
'''

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
if = 'g:plugin_use_nvimlsp'
on_source = 'ddc.vim'
depends = 'nvim-lspconfig'

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
on_source = 'ddc.vim'
hook_source = '''
source $VIM_PATH/rc/denops-popup-preview.vim
'''

[[plugins]]
repo = 'matsui54/denops-signature_help'
if = "has('nvim')"
on_source = 'ddc.vim'
hook_source = '''
source $VIM_PATH/rc/denops-signature_help.vim
'''

[[plugins]]
repo = 'tani/ddc-git'
on_source = 'ddc.vim'

[[plugins]]
repo = 'tani/ddc-oldfiles'
on_source = 'ddc.vim'

[[plugins]]
repo = 'tani/ddc-path'
on_source = 'ddc.vim'

[[plugins]]
repo = 'octaltree/cmp-look'
on_source = 'ddc.vim'

[[plugins]]
repo = 'neovim/nvim-lspconfig'
if = 'has("nvim") && g:plugin_use_nvimlsp'
on_event = 'BufRead'
hook_source = '''
source $VIM_PATH/rc/nvim-lspconfig.vim
'''

[[plugins]]
repo = 'williamboman/mason.nvim'
if = 'has("nvim") && g:plugin_use_nvimlsp'
on_source = 'nvim-lspconfig'
hook_source = '''
source $VIM_PATH/rc/mason.nvim
'''

[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'
if = 'has("nvim") && g:plugin_use_nvimlsp'
on_source = 'mason.nvim'
hook_source = '''
source $VIM_PATH/rc/mason-lspconfig.nvim
'''

[[plugins]]
repo = 'shun/ddc-vim-lsp'
if = "g:plugin_use_vimlsp"
on_source = 'ddc.vim'

[[plugins]]
repo = 'delphinus/ddc-treesitter'
if = "g:plugin_use_ddc && has('nvim')"
on_source = ['ddc.vim', 'nvim-treesitter']

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = ['vim', 'toml', 'help']

[[plugins]]
repo = 'yuki-yano/dps-zero.vim'
depends = 'denops.vim'

[[plugins]]
repo = 'yuki-yano/fuzzy-motion.vim'
depends = 'denops.vim'
on_cmd = 'FuzzyMotion'
hook_add = '''
source $VIM_PATH/rc/fuzzy-motion.vim
'''

[[plugins]]
repo = 'uki00a/denops-pomodoro.vim'
depends = 'denops.vim'

[[plugins]]
repo = 'monaqa/dps-dial.vim'
depends = 'denops.vim'
hook_add = '''
source $VIM_PATH/rc/dps-dial.vim
'''

[[plugins]]
repo = 'tamago324/dps-gitignore'
depends = 'denops.vim'

[[plugins]]
repo = 'yutkat/dps-coding-now.nvim'
if = "!g:is_windows"
depends = 'denops.vim'
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'skanehira/denops-translate.vim'
depends = 'denops.vim'
hook_add = '''
source $VIM_PATH/rc/denops-translate.vim
'''

[[plugins]]
repo = 'yukimemi/dps-ahdr'
# repo = '~/src/github.com/yukimemi/dps-ahdr'
depends = 'denops.vim'
hook_add = '''
source $VIM_PATH/rc/dps-ahdr.vim
'''

[[plugins]]
repo = 'yukimemi/dps-autocursor'
# repo = '~/src/github.com/yukimemi/dps-autocursor'
depends = 'denops.vim'
on_event = ['CursorHold', 'FocusLost']
hook_add = '''
source $VIM_PATH/rc/dps-autocursor.vim
'''

[[plugins]]
repo = 'yukimemi/dps-autobackup'
# repo = '~/src/github.com/yukimemi/dps-autobackup'
depends = 'denops.vim'
on_event = ['CursorHold', 'FocusLost', 'BufWritePre']
hook_add = '''
source $VIM_PATH/rc/dps-autobackup.vim
'''

[[plugins]]
repo = 'yukimemi/dps-autodate'
# repo = '~/src/github.com/yukimemi/dps-autodate'
depends = 'denops.vim'
on_event = ['CursorHold', 'FocusLost', 'BufWritePre']
hook_add = '''
source $VIM_PATH/rc/dps-autodate.vim
'''

[[plugins]]
repo = 'yukimemi/dps-asyngrep'
# repo = '~/src/github.com/yukimemi/dps-asyngrep'
depends = 'denops.vim'
hook_add = '''
source $VIM_PATH/rc/dps-asyngrep.vim
'''

[[plugins]]
repo = 'yukimemi/dps-walk'
# repo = '~/src/github.com/yukimemi/dps-walk'
depends = 'denops.vim'
hook_add = '''
source $VIM_PATH/rc/dps-walk.vim
'''

[[plugins]]
repo = 'yukimemi/dps-randomcolorscheme'
# repo = '~/src/github.com/yukimemi/dps-randomcolorscheme'
depends = 'denops.vim'
hook_add = '''
source $VIM_PATH/rc/dps-randomcolorscheme.vim
'''

[[plugins]]
repo = 'kat0h/bufpreview.vim'
if = "g:plugin_use_bufpreview"
depends = 'denops.vim'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
on_cmd = ['PreviewMarkdown', 'PreviewMarkdownStop', 'PreviewMarkdownToggle']

[[plugins]]
repo = 'yukimemi/glance-vim'
if = "g:plugin_use_glance"
depends = 'denops.vim'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
on_cmd = 'Glance'
hook_add = '''
source $VIM_PATH/rc/glance-vim.vim
'''

[[plugins]]
repo = 'gamoutatsumi/dps-ghosttext.vim'
depends = 'denops.vim'
on_cmd = 'GhostStart'

[[plugins]]
repo = 'lambdalisue/askpass.vim'
lazy = 1

[[plugins]]
repo = 'lambdalisue/guise.vim'
depends = 'denops.vim'

[[plugins]]
repo = 'lambdalisue/gin.vim'
if = "g:plugin_use_gin"
depends = ['denops.vim', 'askpass.vim', 'guise.vim']
hook_add = '''
source $VIM_PATH/rc/gin.vim
'''

[[plugins]]
repo = 'tennashi/gitsign.vim'
if = 'g:plugin_use_gitsign'
depends = 'denops.vim'
on_event = ['CursorHold', 'FocusLost']
hook_add = '''
source $VIM_PATH/rc/gitsign.vim
'''

[[plugins]]
repo = 'skanehira/denops-twihi.vim'
depends = 'denops.vim'
on_cmd = ['TwihiHome', 'TwihiTimeline', 'TwihiMentions', 'TwihiTweet', 'TwihiEditConfig']
hook_add = '''
source $VIM_PATH/rc/denops-twihi.vim
'''

[[plugins]]
repo = '4513ECHO/denops-gitter.vim'
if = 1
depends = 'denops.vim'
hook_add = '''
source $VIM_PATH/rc/denops-gitter.vim
'''

# [[plugins]]
# repo = 'skanehira/denops-silicon.vim'

[[plugins]]
repo = 'pyonk/dexercism.vim'
if = "executable('exercism')"

# ==================== Fuzzy =====================

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
source $VIM_PATH/rc/ctrlp.vim
'''
if = "g:plugin_use_ctrlp"
on_cmd = ['CtrlP', 'CtrlPBuffer', 'CtrlPCurFile', 'CtrlPMRUFiles', 'CtrlPLauncher', 'CtrlPSonictemplate', 'VimHelpJp', 'CtrlPCmdHistory', 'CtrlPSearchHistory', 'CtrlPMRMru', 'CtrlPMRMrw', 'CtrlPMRMrr']
on_map = '<Plug>'
depends = 'mr.vim'
[[plugins]]
repo = 'kaneshin/ctrlp-filetype'
on_source = 'ctrlp.vim'
[[plugins]]
repo = 'kaneshin/ctrlp-memolist'
on_source = 'ctrlp.vim'
[[plugins]]
repo = 'kaneshin/ctrlp-sonictemplate'
on_source = 'ctrlp.vim'
[[plugins]]
repo = 'mattn/ctrlp-launcher'
on_source = 'ctrlp.vim'
[[plugins]]
repo = 'mattn/ctrlp-mark'
on_source = 'ctrlp.vim'
[[plugins]]
repo = 'mattn/ctrlp-vimhelpjp'
on_source = 'ctrlp.vim'
depends = 'webapi-vim'
[[plugins]]
repo = 'ompugao/ctrlp-history'
on_source = 'ctrlp.vim'
[[plugins]]
repo = 'suy/vim-ctrlp-commandline'
on_source = 'ctrlp.vim'
[[plugins]]
repo = 'FelikZ/ctrlp-py-matcher'
on_source = 'ctrlp.vim'
[[plugins]]
repo = 'mattn/ctrlp-matchfuzzy'
if = "exists('*matchfuzzy')"
on_source = 'ctrlp.vim'
[[plugins]]
repo = 'lambdalisue/mr.vim'
lazy = 1
[[plugins]]
repo = 'tsuyoshicho/ctrlp-mr.vim'
depends = 'mr.vim'
on_source = 'ctrlp.vim'


[[plugins]]
repo = 'Shougo/ddu.vim'
if = "g:plugin_use_ddu"
depends = 'denops.vim'
on_source = 'denops.vim'
hook_source = '''
source $VIM_PATH/rc/ddu.vim
'''

[[plugins]]
repo = 'Shougo/ddu-commands.vim'
if = "g:plugin_use_ddu"
depends = ['ddu.vim', 'mr.vim']
on_cmd = 'Ddu'
hook_add = '''
source $VIM_PATH/rc/ddu-commands.vim
'''

[[plugins]]
repo = 'Shougo/ddu-ui-ff'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file_old'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file_point'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-line'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-register'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-action'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-file_external'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-command_history'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-help'
on_source = 'ddu.vim'

[[plugins]]
repo = 'shun/ddu-source-rg'
on_source = 'ddu.vim'

[[plugins]]
repo = 'shun/ddu-source-buffer'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_relative'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_hidden'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-column-filename'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-filter-converter_display_word'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-kind-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-kind-word'
on_source = 'ddu.vim'

[[plugins]]
repo = '4513ECHO/ddu-source-colorscheme'
on_source = 'ddu.vim'

[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'
on_source = 'ddu.vim'

[[plugins]]
repo = '4513ECHO/vim-readme-viewer'
on_source = 'ddu.vim'

[[plugins]]
repo = '4513ECHO/ddu-source-source'
on_source = 'ddu.vim'

[[plugins]]
repo = 'kuuote/ddu-source-mr'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-ui-filer'
if = "g:plugin_use_ddu_filer"
depends = 'ddu.vim'
hook_source = '''
source $VIM_PATH/rc/ddu-ui-filer.vim
'''

# ==================== Statusline ================

[[plugins]]
repo = "itchyny/lightline.vim"
if = "g:plugin_use_lightline"
hook_add = '''
source $VIM_PATH/rc/lightline.vim
'''
on_event = ['CursorHold', 'FocusLost']
depends = ['lightline-colorscheme-simplicity', 'lightline-lsp', 'vim-gitbranch', 'vista.vim']

[[plugins]]
repo = 'halkn/lightline-lsp'
if = "g:plugin_use_lightline"
lazy = 1

[[plugins]]
repo = 'josa42/vim-lightline-coc'
if = "g:plugin_use_lightline"
lazy = 1

[[plugins]]
repo = 'kmtoki/lightline-colorscheme-simplicity'
lazy = 1

[[plugins]]
repo = "vim-airline/vim-airline"
depends = ["vim-airline-themes", "vista.vim"]
hook_add = '''
source $VIM_PATH/rc/vim-airline.vim
'''
if = "g:plugin_use_airline"

[[plugins]]
repo = "vim-airline/vim-airline-themes"
if = "g:plugin_use_airline"
lazy = 1

[[plugins]]
repo = 'nvim-lualine/lualine.nvim'
if = "g:plugin_use_lualine && has('nvim')"
on_event = ['CursorHold', 'FocusLost']
hook_source = '''
source $VIM_PATH/rc/lualine.nvim
'''

[[plugins]]
repo = 'b0o/incline.nvim'
if = "g:plugin_use_incline && has('nvim')"
on_event = ['CursorHold', 'FocusLost']
hook_source = '''
source $VIM_PATH/rc/incline.nvim
'''

# ==================== Filetree ==================

[[plugins]]
repo = 'lambdalisue/fern.vim'
if = "g:plugin_use_fern"
hook_add = '''
source $VIM_PATH/rc/fern.vim
'''
on_cmd = 'Fern'
[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'
on_source = 'fern.vim'
[[plugins]]
repo = 'lambdalisue/fern-git.vim'
on_source = 'fern.vim'
[[plugins]]
repo = 'lambdalisue/fern-mapping-git.vim'
on_source = 'fern.vim'
[[plugins]]
repo = 'lambdalisue/fern-bookmark.vim'
on_source = 'fern.vim'
[[plugins]]
repo = 'lambdalisue/fern-comparator-lexical.vim'
on_source = 'fern.vim'
[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
on_source = 'fern.vim'
depends = ['nerdfont.vim', 'glyph-palette.vim']
[[plugins]]
repo = 'lambdalisue/fern-hijack.vim'
on_source = 'fern.vim'


[[plugins]]
repo = 'mattn/vim-molder'
if = 'g:plugin_use_molder'
depends = ['vim-molder-operations']
hook_add = '''
source $VIM_PATH/rc/vim-molder.vim
'''

[[plugins]]
repo = 'mattn/vim-molder-operations'
on_source = 'vim-molder'

[[plugins]]
repo = 'cocopon/vaffle.vim'
if = 'g:plugin_use_vaffle'
on_cmd = 'Vaffle'

[[plugins]]
repo = 'obaland/vfiler.vim'
depends = 'vfiler-column-devicons'
if = 'g:plugin_use_vfiler'
on_cmd = 'VFiler'
hook_add = '''
source $VIM_PATH/rc/vfiler.vim
'''

[[plugins]]
repo = 'obaland/vfiler-column-devicons'
lazy = 1

# ==================== Complement ================

[[plugins]]
repo = 'honza/vim-snippets'
on_event = 'InsertEnter'

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
if = '!g:plugin_use_coc'
on_event = 'InsertEnter'
on_source = 'ddc.vim'
hook_source = '''
source $VIM_PATH/rc/vim-vsnip.vim
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
on_source = 'vim-vsnip'

[[plugins]]
repo = 'rafamadriz/friendly-snippets'
on_source = 'vim-vsnip'

[[plugins]]
repo = 'kitagry/vs-snippets'
on_source = 'vim-vsnip'

[[plugins]]
repo = 'mattn/vim-lsp-icons'
if = "g:plugin_use_vimlsp"

[[plugins]]
repo = 'mattn/vim-lsp-settings'
if = "g:plugin_use_vimlsp"

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
if = "g:plugin_use_vimlsp"
hook_add = '''
source $VIM_PATH/rc/vim-lsp.vim
'''

[[plugins]]
repo = 'tsuyoshicho/vim-efm-langserver-settings'
if = 0

[[plugins]]
repo = "neoclide/coc.nvim"
if = "g:plugin_use_coc"
rev = "release"
hook_add = '''
source $VIM_PATH/rc/coc.nvim
'''

[[plugins]]
repo = 'github/copilot.vim'
if = 0
on_event = ['CursorHold', 'FocusLost']
on_cmd = 'Copilot'
hook_add = '''
source $VIM_PATH/rc/copilot.vim
'''


# ==================== Runner ====================

[[plugins]]
repo = 'thinca/vim-quickrun'
if = "g:plugin_use_quickrun"
depends = 'vim-quickrun-neovim-job'
hook_add = '''
source $VIM_PATH/rc/vim-quickrun.vim
'''
on_ft = ['ps1', 'typescript']
on_map = '<Plug>'
on_cmd = 'QuickRun'

[[plugins]]
repo = 'lambdalisue/vim-quickrun-neovim-job'
if = "g:plugin_use_quickrun"
lazy = 1

[[plugins]]
repo = 'statiolake/vim-quickrun-runner-nvimterm'
hook_add = '''
source $VIM_PATH/rc/vim-quickrun-runner-nvimterm.vim
'''
if = "has('nvim') && g:plugin_use_quickrun"
on_source = 'vim-quickrun'

[[plugins]]
repo = 'skywind3000/asyncrun.vim'
if = "g:plugin_use_asyncrun"
hook_add = '''
source $VIM_PATH/rc/asyncrun.vim
'''

# ==================== Filetype (all) ============

[[plugins]]
repo = 'nathom/filetype.nvim'
if = "has('nvim')"
hook_add = '''
source $VIM_PATH/rc/filetype.nvim
'''

[[plugins]]
repo = 'sheerun/vim-polyglot'
if = 0
hook_add = '''
source $VIM_PATH/rc/vim-polyglot.vim
'''
merged = 0

# ==================== Filetype (vim) =======

[[plugins]]
repo = 'lambdalisue/vim-backslash'
on_ft = 'vim'

# ==================== Filetype (markdown) =======

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']

# [[plugins]]
# repo = 'SidOfc/mkdx'
# on_ft = ['markdown']

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
if = "g:plugin_use_markdownpreview"
hook_add = '''
source $VIM_PATH/rc/markdown-preview.nvim
'''
hook_post_update = '''
call dein#source('markdown-preview.nvim')
call mkdp#util#install()
'''
on_ft = ['markdown', 'pandoc.markdown', 'rmd']

[[plugins]]
repo = 'rhysd/vim-gfm-syntax'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']

[[plugins]]
repo = 'previm/previm'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']

# ==================== Filetype (html) ===========

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'xml']

[[plugins]]
repo = 'amadeus/vim-xml'
if = "!g:plugin_use_coc"
on_ft = ['html', 'xml']


# ==================== Filetype (javascript) =======

[[plugins]]
repo = 'heavenshell/vim-jsdoc'
on_ft = ['javascript', 'javascript.jsx','typescript']
build = '''
npm i -g lehre
'''

# ==================== Filetype (plantuml) =======

[[plugins]]
repo = 'tsuyoshicho/plantuml-previewer.vim'
depends = ['open-browser.vim']
on_ft = 'plantuml'
hook_add = '''
source $VIM_PATH/rc/plantuml-previewer.vim
'''

[[plugins]]
repo = 'aklt/plantuml-syntax'
on_ft = 'plantuml'
hook_add = '''
source $VIM_PATH/rc/plantuml-syntax.vim
'''

# ==================== Filetype (toml) =======

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'nastevens/vim-cargo-make'
on_ft = 'toml'

# ==================== Filetype (duckscript) =======

[[plugins]]
repo = 'nastevens/vim-duckscript'
if = 0

# ==================== Filetype (Haskell) ========

[[plugins]]
repo = 'itchyny/vim-haskell-indent'
on_ft = 'haskell'

[[plugins]]
repo = 'itchyny/vim-haskell-sort-import'
hook_add = '''
source $VIM_PATH/rc/vim-haskell-sort-import.vim
'''
on_ft = 'haskell'

# ==================== Filetype (purescript) =====

[[plugins]]
repo = 'FrigoEU/psc-ide-vim'
on_ft = 'purescript'

# ==================== Filetype (powershell) =====

[[plugins]]
repo = 'PProvost/vim-ps1'
on_ft = ['powershell', 'ps1']

# ==================== Filetype (csv) ============

# [[plugins]]
# repo = 'mechatroner/rainbow_csv'
# on_ft = 'csv'

[[plugins]]
repo = 'chrisbra/csv.vim'
on_ft = 'csv'

# ==================== Filetype (log) ============

[[plugins]]
repo = 'MTDL9/vim-log-highlighting'
on_ft = 'log'
hook_add = '''
source $VIM_PATH/rc/vim-log-highlighting.vim
'''

# ==================== Filetype (fish) ============

[[plugins]]
repo = 'dag/vim-fish'
on_ft = 'fish'

# ==================== After ftplugin ============

[ftplugin]
_ = '''
" Disable automatically insert comment.
setl formatoptions-=r
setl formatoptions-=o
setl formatoptions+=mMBl

set concealcursor=nc
'''

dosbatch = '''
setl fenc=cp932 ff=dos
'''

html = '''
let g:html_indent_inctags = "html,body,head,tbody"
let g:html_syntax_folding = 1
setl noexpandtab
setl ts=4 sw=4 sts=0
setl foldmethod=syntax
'''

csv = '''
setl nowrap
'''

log = '''
setl nowrap
'''

mail = '''
setl ff=dos
setl fenc=cp932
'''

markdown = '''
setl formatoptions+=t
setl conceallevel=0
'''

go = '''
setl completeopt+=preview
'''

ps1 = '''
setl expandtab
setl fenc=utf-8
setl ff=dos
setl foldmethod=syntax
setl ts=2 sw=2 sts=0
setl foldcolumn=3
'''

python = '''
setl cinwords=if,elif,else,for,while,try,except,finally,def,class
setl expandtab
setl ts=8 sw=4 sts=4
setl foldmethod=indent foldlevel=99
'''

xml = '''
setl noexpandtab
setl ts=4 sw=4 sts=0

let g:xml_syntax_folding = 1
setl foldmethod=syntax
'''

elm = '''
setl ts=4 sw=4 sts=0
'''

javascript = '''
'''

css = '''
'''

cs = '''
setl expandtab
setl ts=2 sw=2 sts=2
'''

rust = '''
'''

text = '''
setl noexpandtab
setl ts=4 sw=4 sts=0
'''

json = '''
set concealcursor=nc
'''
