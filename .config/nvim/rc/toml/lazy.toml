# ========== Utility ==============================================================================
[[plugins]]
repo = 'Shougo/junkfile.vim'
on_source = 'ddu.vim'
on_cmd = 'JunkfileOpen'
hook_add = '''
  nnoremap se <Cmd>Ddu junkfile -source-option-junkfile-volatile<CR>
'''

[[plugins]]
repo = 'thinca/vim-qfreplace'
on_ft = ['qf']
[plugins.ftplugin]
qf = '''
  nnoremap <buffer> r <Cmd>Qfreplace<CR>
'''

[[plugins]]
repo = 'itchyny/vim-qfedit'
on_ft = ['qf']

[[plugins]]
repo = 'previm/previm'
on_cmd = 'PrevimOpen'

[[plugins]]
repo = 'lambdalisue/vim-findent'

[[plugins]]
repo = 'tweekmonster/helpful.vim'
on_cmd = 'HelpfulVersion'

[[plugins]]
repo = 'github/copilot.vim'
if = false
on_cmd = 'Copilot'
hook_source = '''
  let g:copilot_no_maps = v:true
  "let g:copilot_node_command = '/snap/bin/node'
  let g:copilot_hide_during_completion = 0
  imap <silent><expr> <C-g> copilot#Accept()
  imap <silent><expr> <C-n> copilot#Next()
  imap <silent><expr> <C-p> copilot#Previous()

  " Enable copilot for text files
  let g:copilot_filetypes = #{
    \   gitcommit: v:true,
    \   markdown: v:true,
    \   text: v:true,
    \   yaml: v:true,
    \   ddu-ff-filter: v:false,
    \ }
'''

[[plugins]]
repo = 'Exafunction/codeium.vim'
if = 'isdirectory(expand("~/.codeium"))'
on_cmd = ['Codeium']
on_event = ['InsertEnter']

[[plugins]]
repo = 'tyru/open-browser.vim'
hooks_file = '$BASE_DIR/plugin/open-browser.vim'

[[plugins]]
repo = 'dstein64/vim-startuptime'
on_cmd = 'StartupTime'

[[plugins]]
repo = 'thinca/vim-ambicmd'
on_event = 'VimEnter'
hooks_file = '$BASE_DIR/plugin/vim-ambicmd.vim'

[[plugins]]
repo = 'tyru/capture.vim'
on_cmd = 'Capture'

[[plugins]]
repo = "andymass/vim-matchup"
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'LeafCage/yankround.vim'
on_event = ['CursorHold', 'FocusLost', 'BufRead']
hooks_file = '$BASE_DIR/plugin/yankround.vim'

[[plugins]]
repo = 'thinca/vim-prettyprint'
on_cmd = 'PP'

[[plugins]]
repo = 'thinca/vim-partedit'
on_cmd = 'Partedit'
hooks_file = '$BASE_DIR/plugin/vim-partedit.vim'

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
if = '!has("win32")'

[[plugins]]
repo = 'glidenote/memolist.vim'
hooks_file = '$BASE_DIR/plugin/memolist.vim'
on_cmd = ['MemoList', 'MemoNew', 'MemoGrep']

[[plugins]]
repo = 'rhysd/committia.vim'
on_event = 'VimEnter'

[[plugins]]
repo = 'rhysd/conflict-marker.vim'
on_event = ['CursorHold', 'FocusLost']

# ========== Visual ===============================================================================
[[plugins]]
repo = 'lambdalisue/seethrough.vim'
if = "!has('gui')"

[[plugins]]
repo = "ntpeters/vim-better-whitespace"
hooks_file = '$BASE_DIR/plugin/vim-better-whitespace.vim'
on_cmd = 'StripWhiteSpace'
on_event = ['CursorHold', 'FocusLost']

[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_add = '''
let g:context_filetype#ignore_patterns = {
    \ 'toml': ['^\s*#\s*'],
    \ }
'''

[[plugins]]
repo = 'unblevable/quick-scope'
on_event = ['CursorHold', 'FocusLost']
hooks_file = '$BASE_DIR/plugin/quick-scope.vim'

# ========== Motion ===============================================================================
[[plugins]]
repo = 'haya14busa/vim-edgemotion'
hooks_file = '$BASE_DIR/plugin/vim-edgemotion.vim'

[[plugins]]
repo = 'Bakudankun/BackAndForward.vim'
hooks_file = '$BASE_DIR/plugin/BackAndForward.vim'

# ========== Markdown =============================================================================
[[plugins]]
repo = 'rhysd/vim-gfm-syntax'
on_ft = 'markdown'


# ========== Help =================================================================================
[[plugins]]
repo = 'machakann/vim-vimhelplint'
on_ft = 'help'
[plugins.ftplugin]
help = '''
  nnoremap <buffer> ,r  <Cmd>VimhelpLint!<CR>
'''

# ========== Go ===================================================================================
[[plugins]]
repo = 'mattn/vim-goimports'
on_ft = 'go'
hook_source = '''
  let g:goimports_simplify = v:true
'''

# ========== Haskell ==============================================================================
[[plugins]]
repo = 'dag/vim2hs'
on_ft = 'haskell'
hook_source = '''
  let g:haskell_conceal = v:false
'''

# ========== typst ================================================================================
[[plugins]]
repo = 'kaarmu/typst.vim'
on_ft = 'typst'

# ========== vimscript ============================================================================
[[plugins]]
repo = 'rbtnn/vim-vimscript_lasterror'
on_cmd = 'VimscriptLastError'

