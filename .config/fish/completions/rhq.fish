complete -c rhq -n "__fish_use_subcommand" -s h -l help -d 'Prints help information'
complete -c rhq -n "__fish_use_subcommand" -s V -l version -d 'Prints version information'
complete -c rhq -n "__fish_use_subcommand" -f -a "add" -d 'Add existed repositories into management'
complete -c rhq -n "__fish_use_subcommand" -f -a "clone" -d 'Clone remote repositories, and then add it under management'
complete -c rhq -n "__fish_use_subcommand" -f -a "completion" -d 'Generate completion scripts for your shell'
complete -c rhq -n "__fish_use_subcommand" -f -a "import" -d 'Import existed repositories into management'
complete -c rhq -n "__fish_use_subcommand" -f -a "list" -d 'List local repositories managed by rhq'
complete -c rhq -n "__fish_use_subcommand" -f -a "new" -d 'Create a new repository and add it into management'
complete -c rhq -n "__fish_use_subcommand" -f -a "refresh" -d 'Scan repository list and drop if it is not existed or matches exclude pattern.'
complete -c rhq -n "__fish_use_subcommand" -f -a "help" -d 'Prints this message or the help of the given subcommand(s)'
complete -c rhq -n "__fish_seen_subcommand_from add" -s v -l verbose -d 'Use verbose output'
complete -c rhq -n "__fish_seen_subcommand_from add" -s h -l help -d 'Prints help information'
complete -c rhq -n "__fish_seen_subcommand_from add" -s V -l version -d 'Prints version information'
complete -c rhq -n "__fish_seen_subcommand_from clone" -l root -d 'Path to determine the destination directory of cloned repository'
complete -c rhq -n "__fish_seen_subcommand_from clone" -l vcs -d 'Used Version Control System' -r -f -a "git hg darcs pijul"
complete -c rhq -n "__fish_seen_subcommand_from clone" -s s -l ssh -d 'Use SSH protocol instead of HTTP(s)'
complete -c rhq -n "__fish_seen_subcommand_from clone" -s h -l help -d 'Prints help information'
complete -c rhq -n "__fish_seen_subcommand_from clone" -s V -l version -d 'Prints version information'
complete -c rhq -n "__fish_seen_subcommand_from completion" -s h -l help -d 'Prints help information'
complete -c rhq -n "__fish_seen_subcommand_from completion" -s V -l version -d 'Prints version information'
complete -c rhq -n "__fish_seen_subcommand_from import" -l depth -d 'Maximal depth of entries for each base directory'
complete -c rhq -n "__fish_seen_subcommand_from import" -s v -l verbose -d 'Use verbose output'
complete -c rhq -n "__fish_seen_subcommand_from import" -s h -l help -d 'Prints help information'
complete -c rhq -n "__fish_seen_subcommand_from import" -s V -l version -d 'Prints version information'
complete -c rhq -n "__fish_seen_subcommand_from list" -l format -d 'List format' -r -f -a "name fullpath"
complete -c rhq -n "__fish_seen_subcommand_from list" -s h -l help -d 'Prints help information'
complete -c rhq -n "__fish_seen_subcommand_from list" -s V -l version -d 'Prints version information'
complete -c rhq -n "__fish_seen_subcommand_from new" -l root -d 'Path to determine the destination of new repository'
complete -c rhq -n "__fish_seen_subcommand_from new" -l vcs -d 'Used Version Control System' -r -f -a "git hg darcs pijul"
complete -c rhq -n "__fish_seen_subcommand_from new" -s s -l ssh -d 'Use SSH protocol instead of HTTP(s)'
complete -c rhq -n "__fish_seen_subcommand_from new" -s h -l help -d 'Prints help information'
complete -c rhq -n "__fish_seen_subcommand_from new" -s V -l version -d 'Prints version information'
complete -c rhq -n "__fish_seen_subcommand_from refresh" -s v -l verbose -d 'Use verbose output'
complete -c rhq -n "__fish_seen_subcommand_from refresh" -s s -l sort -d 'Sort by path string'
complete -c rhq -n "__fish_seen_subcommand_from refresh" -s h -l help -d 'Prints help information'
complete -c rhq -n "__fish_seen_subcommand_from refresh" -s V -l version -d 'Prints version information'
complete -c rhq -n "__fish_seen_subcommand_from help" -s h -l help -d 'Prints help information'
complete -c rhq -n "__fish_seen_subcommand_from help" -s V -l version -d 'Prints version information'
