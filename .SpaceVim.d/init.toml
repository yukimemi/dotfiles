#=============================================================================
# dark_powered.toml --- dark powered configuration example for SpaceVim
# Copyright (c) 2016-2020 Wang Shidong & Contributors
# Author: Wang Shidong < wsdjeg at 163.com >
# URL: https://spacevim.org
# License: GPLv3
#=============================================================================

# All SpaceVim option below [option] section
[options]
autocomplete_method = "coc"
automatic_update = false
bootstrap_after = "myspacevim#after"
bootstrap_before = "myspacevim#before"
buffer_index_type = 4
colorscheme = "forest-night"
colorscheme_bg = "dark"
disabled_plugins = ["neco-syntax", "vim-surround", "clever-f.vim"]
enable_googlesuggest = true
enable_guicolors = true
enable_os_fileformat_icon = true
enable_projects_cache = true
enable_statusline_mode = true
enable_tabline_filetype_icon = true
filemanager = "nerdtree"
filetree_direction = "left"
guifont = 'Cica:h10'
lint_on_the_fly = true
max_column = 120
projects_cache_num = 50
statusline_iseparator = "arrow"
statusline_separator = "arrow"
statusline_right_sections = ['bomb', 'fileformat', 'cursorpos', 'percentage']

[[layers]]
name = 'autocomplete'
auto_completion_return_key_behavior = "complete"
auto_completion_tab_key_behavior = "smart"

[[layers]]
name = 'colorscheme'

[[layers]]
name = 'tools'

[[layers]]
name = 'format'
format_on_save = true

[[layers]]
name = 'checkers'

[[layers]]
default_height = 30
default_position = 'bottom'
name = 'shell'

[[layers]]
name = 'denite'
enable = false

[[layers]]
name = 'ctrlp'
enable = true

[[layers]]
name = 'japanese'

[[layers]]
name = 'operator'

[[layers]]
name = 'incsearch'

[[layers]]
name = 'test'

[[layers]]
name = 'ui'

[[layers]]
name = 'lang#toml'

[[layers]]
name = 'lang#rust'

[[layers]]
name = 'lang#markdown'

[[layers]]
name = 'lang#powershell'

[[layers]]
name = 'lang#autohotkey'

[[custom_plugins]]
hook_add = '''
source $SPACE_VIM/rc/vim-operator-replace.vim
'''
on_event = ['VimEnter']
repo = 'kana/vim-operator-replace'

[[custom_plugins]]
on_event = ['VimEnter']
repo = 'machakann/vim-sandwich'

[[custom_plugins]]
hook_add = '''
source $SPACE_VIM/rc/wilder.nvim
'''
repo = 'gelguy/wilder.nvim'

[[custom_plugins]]
repo = 'lambdalisue/seethrough.vim'

[[custom_plugins]]
hook_add = '''
source $SPACE_VIM/rc/vim-ambicmd.vim
'''
repo = 'thinca/vim-ambicmd'

[[custom_plugins]]
repo = 'rbtnn/vim-gloaded'

[[custom_plugins]]
hook_add = '''
source $SPACE_VIM/rc/gina.vim
'''
on_cmd = ['Gina']
repo = 'lambdalisue/gina.vim'

[[custom_plugins]]
repo = 'hrsh7th/vim-gitto'
lazy = 1
[[custom_plugins]]
repo = 'hrsh7th/vim-denite-gitto'
depends = ['denite.nvim', 'vim-gitto']
on_cmd = ['DeniteGitto']

[[custom_plugins]]
repo = 'kaneshin/ctrlp-filetype'
depends = ['ctrlp.vim']
on_cmd = ['CtrlPFiletype']

[[custom_plugins]]
repo = 'kaneshin/ctrlp-memolist'
depends = ['ctrlp.vim']
on_cmd = ['CtrlPMemolist']

[[custom_plugins]]
repo = 'kaneshin/ctrlp-sonictemplate'
depends = ['ctrlp.vim']
on_cmd = ['CtrlPSonictemplate']

[[custom_plugins]]
repo = 'mattn/ctrlp-launcher'
depends = ['ctrlp.vim']
on_cmd = ['CtrlPLauncher']

[[custom_plugins]]
repo = 'mattn/ctrlp-mark'
depends = ['ctrlp.vim']
on_cmd = ['CtrlPMark']

[[custom_plugins]]
repo = 'ompugao/ctrlp-history'
depends = ['ctrlp.vim']
on_cmd = ['CtrlPCmdHistory', 'CtrlPSearchHistory']

[[custom_plugins]]
repo = 'suy/vim-ctrlp-commandline'
depends = ['ctrlp.vim']
on_cmd = ['CtrlPCommandLine']

[[custom_plugins]]
repo = 'FelikZ/ctrlp-py-matcher'
depends = ['ctrlp.vim']

[[custom_plugins]]
repo = 'raghur/fruzzy'
depends = ['ctrlp.vim']
hook_post_update = 'call fruzzy#install()'

[[custom_plugins]]
repo = 'mattn/ctrlp-matchfuzzy'
depends = ['ctrlp.vim']
if = "exists('*matchfuzzy')"

[[custom_plugins]]
repo = 'glidenote/memolist.vim'
hook_add = '''
source $SPACE_VIM/rc/memolist.vim
'''
on_cmd = ['MemoList', 'MemoNew', 'MemoGrep']

[[custom_plugins]]
hook_add = '''
source $SPACE_VIM/rc/quick-scope.vim
'''
on_event = ['CursorHold', 'FocusLost']
repo = 'unblevable/quick-scope'

[[custom_plugins]]
repo = 'deris/vim-shot-f'
on_event = ['CursorHold', 'FocusLost']

[[custom_plugins]]
hook_add = '''
source $SPACE_VIM/rc/vim-edgemotion.vim
'''
on_map = '<Plug>'
repo = 'haya14busa/vim-edgemotion'

[[custom_plugins]]
hook_add = '''
source $SPACE_VIM/rc/autodate.vim
'''
on_event = ['InsertEnter']
repo = 'vim-scripts/autodate.vim'

[[custom_plugins]]
repo = 'MTDL9/vim-log-highlighting'
on_ft = ['log']

[[custom_plugins]]
hook_add = '''
source $SPACE_VIM/rc/vim-submode.vim
'''
on_event = ['CursorHold', 'FocusLost']
repo = 'thinca/vim-submode'


[[custom_plugins]]
repo = 'nvim-telescope/telescope.nvim'
depends = ['popup.nvim', 'plenary.nvim']
hook_source = '''
source $SPACE_VIM/rc/telescope.nvim
'''
if = "has('nvim')"

[[custom_plugins]]
repo = 'nvim-lua/popup.nvim'
lazy = 1
if = "has('nvim')"
[[custom_plugins]]
repo = 'nvim-lua/plenary.nvim'
lazy = 1
if = "has('nvim')"

[[custom_plugins]]
repo = 'Shougo/junkfile.vim'
on_cmd = ['JunkfileOpen']

[[custom_plugins]]
hook_source = '''
source $SPACE_VIM/rc/vim-singleton.vim
'''
if = "!has('nvim') && has('clientserver')"
repo = 'thinca/vim-singleton'

[[custom_plugins]]
hook_add = '''
source $SPACE_VIM/rc/transparency-windows-vim.vim
'''
if = "g:is_windows && has('gui')"
repo = 'mattn/transparency-windows-vim'
on_event = ['CursorHold', 'FocusLost']

[[custom_plugins]]
if = "g:is_windows"
repo = 'mattn/vimtweak'

[[custom_plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
if = "has('nvim')"
on_event = ['CursorHold', 'FocusLost']
hook_source = '''
source $SPACE_VIM/rc/nvim-treesitter.vim
'''

[[custom_plugins]]
repo = 'thinca/vim-localrc'

[[custom_plugins]]
repo = 'thinca/vim-fontzoom'
if = "has('gui')"

[[custom_plugins]]
repo = 'sainnhe/forest-night'

[[custom_plugins]]
if = "!has('nvim')"
repo = 'roxma/nvim-yarp'

[[custom_plugins]]
if = "!has('nvim')"
repo = 'roxma/vim-hug-neovim-rpc'

